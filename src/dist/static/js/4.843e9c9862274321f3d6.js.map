{"version":3,"sources":["webpack:///./node_modules/_core-js@2.6.11@core-js/library/fn/object/entries.js","webpack:///src/views/course/components/specialPrice.vue","webpack:///./src/views/course/components/specialPrice.vue?56e7","webpack:///./src/views/course/components/specialPrice.vue","webpack:///src/views/course/components/unionApply.vue","webpack:///./src/views/course/components/unionApply.vue?3f3d","webpack:///./src/views/course/components/unionApply.vue","webpack:///src/views/course/addCourse.vue","webpack:///./src/views/course/addCourse.vue?380f","webpack:///./src/views/course/addCourse.vue","webpack:///./node_modules/_wangeditor@3.1.1@wangeditor/release/wangEditor.js","webpack:///./node_modules/_core-js@2.6.11@core-js/library/modules/_object-to-array.js","webpack:///./node_modules/_babel-runtime@6.26.0@babel-runtime/core-js/object/entries.js","webpack:///./node_modules/_core-js@2.6.11@core-js/library/modules/es7.object.entries.js"],"names":["__webpack_require__","module","exports","Object","entries","specialPrice","props","Number","String","data","special","created","mounted","this","console","log","methods","watch","val","$emit","components_specialPrice","render","_vm","_h","$createElement","_c","_self","class","themeName","attrs","id","staticClass","type","placeholder","model","value","callback","$$v","expression","_v","staticRenderFns","course_components_specialPrice","normalizeComponent","ssrContext","unionApply","courseId","init","computed","extends_default","vuex_esm","price","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","get_iterator_default","unionCourse","next","done","course","err","return","_this","queryCourses","then","components_unionApply","label","_l","item","key","name","disabled","course_components_unionApply","unionApply_normalizeComponent","_numberToChinese","utils","Editor","addCourse","_data$created$mounted","files","uploadUrl","upLoadheader","visible","courseMessage","lon","lat","subjectDict","otherSubject","teachAreasDict","startTime","endTime","teacherList","teacherName","teacherId","arrangeList","courseDay","courseStartTime","courseEndTime","courseNum","courseIndex","schedule","fileList","city","area","address","maxNumber","couponList","phone","describes","uniteCourseId","couponIds","activityUnion","activityPrice","marker","videoFlag","showTip","videoUploadPercent","map","editor","geocoder","rules","message","isAgainEdit","courseDetails","initUploadUrl","initMap","initEditor","initSubject","initTeachAreas","initTeachers","initData","city_list","arr","entries_default","utils_area","_ref","_ref2","slicedToArray_default","push","country_list","arr1","city_mark","slice","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_ref3","_ref4","country","length","token","auth","env","validate","num","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref5","_ref6","$message","duration","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref7","_ref8","index","teacher","splice","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","arrange","$refs","focus","getDictSubject","getDictTeachAreasDict","customConfig","menus","uploadImgServer","uploadImgMaxSize","uploadImgMaxLength","uploadFileName","uploadImgHeaders","uploadImgTimeout","uploadImgHooks","error","xhr","fail","result","timeout","customInsert","insertImg","mediaType","path","url","host","onchange","html","create","queryTeacher","agencyId","assign_default","courseData","txt","couponId","tranformTeacherList","queryCoupon","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_ref9","_ref10","$set","numberToChinese","fromTo","addTeacher","arrangement","obj","addClass","onSpecialPrice","onCourseId","cancel","SET_AGAIN_EDIT","$router","_this2","AMap","Map","zoom","on","event","lnglat","remove","Marker","position","title","add","lng","getAddress","status","info","regeocode","addressComponent","adcode","township","street","streetNumber","plugin","geolocation","Geolocation","zoomToAccuracy","buttonPosition","getCurrentPosition","addListener","onMapGeolocationComplete","onMapGeolocationError","addControl","Geocoder","transformLocal","location","_this3","getLocation","geocodes","setFitView","handleVideoSuccess","res","file","code","handleExceed","warning","uploadVideoProcess","test","percentage","toFixed","beforeUploadVideo","size","getTeacherMessage","list","_this4","_loop","t","teachers","find","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","save","_this5","couponText","editCourse","query","SAVE_COURSE_DATA","onClose","defineProperty_default","EcInput","EducationInput","EcButton","EducationButton","SpecialPrice","course_addCourse","ref","label-width","prop","span","gutter","directives","rawName","value-format","picker-options","disabledDate","date","Date","getTime","selectableRange","click","$event","refInFor","popper-class","courseClass","nativeOn","staticStyle","color","font-size","min","placement","width","course-id","slot","special-price","action","accept","before-upload","on-success","on-progress","limit","on-exceed","file-list","headers","list-type","_e","multiple","$route","addCourse_Component","addCourse_normalizeComponent","__webpack_exports__","factory","isDOMList","selector","HTMLCollection","NodeList","eventList","DomElement","div","nodeType","selectorResult","Array","replace","trim","indexOf","document","createElement","innerHTML","children","querySelectorAll","i","$","prototype","constructor","forEach","fn","elem","call","clone","deep","cloneList","cloneNode","get","first","last","types","split","addEventListener","e","target","matches","off","removeEventListener","attr","getAttribute","setAttribute","className","filter","join","removeClass","css","currentStyle","style","resultArr","show","hide","childNodes","append","$children","child","appendChild","parent","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","nodeName","text","parentUntil","_currentElem","results","equal","$elem","insertBefore","referenceNode","parentNode","insertAfter","lastChild","nextSibling","offAll","config","fontNames","colors","emotions","content","alt","src","zIndex","debug","linkCheck","link","linkImgCheck","pasteFilterStyle","pasteIgnoreImg","pasteTextHandle","showLinkImg","linkImgCallback","uploadImgShowBase64","uploadImgParams","withCredentials","before","success","qiniu","UA","_ua","navigator","userAgent","isWebkit","isIE","window","objForEach","hasOwnProperty","arrForEach","fakeArr","getRandom","prefix","Math","random","toString","replaceHtmlSymbol","isFunction","Bold","_active","onClick","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","replaceLang","str","langArgs","reg","_emptyFn","DropList","menu","opt","$container","$title","titleHtml","$list","elemHtml","$li","hideTimeoutId","setTimeout","_rendered","_show","Head","droplist","_command","FontSize","FontName","fontName","clearTimeout","$menuELem","menuHeight","height","showTimeoutId","$selectionElem","getSelectionContainerElem","$textElem","cmdValue","queryCommandValue","emptyFn","_isCreatedPanelMenus","Panel","Link","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","ForeColor","BackColor","Quote","Code","Emoticon","Table","Video","Image","imgMenuId","$body","$textContainerElem","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","tpl","$content","_index","stopPropagation","events","$inputs","_hideOtherPanels","panel","$linkelem","createRangeByElem","_createPanel","getSelectionText","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","selectionText","checkResult","alert","$selectionELem","$parent","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","$code","textId","btnId","_insertCode","_updateCode","$parentElem","tabConfig","emotData","emotType","faceHtml","$target","insertHtml","_insert","emotHtml","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","r","c","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$trs","trLength","tr","locationData","$currentTr","newTr","trData","tdIndex","$currentTd","toLowerCase","$table","textValId","width30","width50","width100","delBtn","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","tabsConfig","fileElem","insertLinkImg","tabsConfigResult","customUploadImg","FileReader","MenuConstructors","Menus","getPasteText","clipboardData","originalEvent","getData","Text","Command","API","_currentRange","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$bar","bold","head","fontSize","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","emoticon","table","video","image","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","changeActive","clear","initSelection","getJSON","getChildrenJSON","curElem","elemResult","textContent","tag","attrData","attrList","attributes","attrListLength","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","_dragHandle","saveRange","insertEmptyP","$p","keyCode","selectionNodeName","parentNodeName","queryCommandSupported","_willBreakCode","preventDefault","_startOffset","startOffset","codeLength","codeHandle","txtHtml","ignoreImg","pasteTime","canDo","now","flag","pasteHtml","filterStyle","pasteText","docSplitHtml","getPasteHtml","ex","pasteFiles","items","getAsFile","getPasteImgs","dataTransfer","_useStyleWithCSS","execCommand","_name","_execCommand","change","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","_range","getSelection","rangeCount","getRangeAt","$containerElem","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","progress","timeoutId","_hide","_typeof","Symbol","iterator","UploadImg","_alert","alertInfo","debugInfo","customAlert","Error","img","onload","onerror","onabort","maxSize","maxSizeM","maxLength","uploadImgParamsWithUrl","hooks","resultFiles","errInfo","bind","formdata","FormData","uploadImgServerArr","uploadImgServerHash","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","total","onreadystatechange","readyState","responseText","JSON","parse","errno","beforeResult","prevent","msg","setRequestHeader","send","reader","readAsDataURL","editorId","toolbarSelector","textSelector","_initConfig","assign","lang","RegExp","_initDom","$toolbarSelector","config$$1","toolbarElemId","textElemId","compositionEnd","onfocus","onblur","isFocus","isChild","isToolbar","isMenu","_initCommand","_initSelectionAPI","_initUploadImg","_initMenus","_initText","newLine","$last","onChangeTimeoutId","beforeChangeHtml","onchangeTimeout","currentHtml","_offAllEvent","varArgs","TypeError","to","arguments","nextSource","nextKey","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","getElementsByTagName","wangEditor","DESCRIPTORS","getKeys","toIObject","isEnum","f","isEntries","it","O","keys","default","__esModule","$export","$entries","S"],"mappings":"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","file":"static/js/4.843e9c9862274321f3d6.js","sourcesContent":["require('../../modules/es7.object.entries');\nmodule.exports = require('../../modules/_core').Object.entries;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.6.11@core-js/library/fn/object/entries.js\n// module id = BMEL\n// module chunks = 4 6","<template>\r\n  <div id=\"specialPrice\" :class=\"themeName\">\r\n    <div class=\"price_container\">\r\n      <el-input type=\"number\" v-model=\"special\" placeholder=\"请输入特价价格\"></el-input>\r\n      <footer>\r\n        <!-- <button @click=\"submit\">提交</button> -->\r\n      </footer>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props:{\r\n    specialPrice:[Number,String]\r\n  },\r\n  data() {\r\n    return {\r\n      special: \"\"\r\n    };\r\n  },\r\n  created(){\r\n\r\n  },\r\n  mounted(){\r\n    this.special=this.specialPrice;\r\n    console.log(this.specialPrice)\r\n  },\r\n  methods: {\r\n\r\n  },\r\n  watch: {\r\n    special(val) {\r\n      this.$emit(\"special-price\",val);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"@/styles/mixin.scss\";\r\n@import \"@/styles/variables.scss\";\r\n.price_container {\r\n  padding: 40px;\r\n  footer {\r\n    margin-top: 30px;\r\n    button {\r\n      @include buttonColor(\"g\") {\r\n        display: block;\r\n        margin: auto;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/course/components/specialPrice.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.themeName,attrs:{\"id\":\"specialPrice\"}},[_c('div',{staticClass:\"price_container\"},[_c('el-input',{attrs:{\"type\":\"number\",\"placeholder\":\"请输入特价价格\"},model:{value:(_vm.special),callback:function ($$v) {_vm.special=$$v},expression:\"special\"}}),_vm._v(\" \"),_c('footer')],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-82440adc\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/views/course/components/specialPrice.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-82440adc\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./specialPrice.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./specialPrice.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./specialPrice.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-82440adc\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./specialPrice.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-82440adc\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/course/components/specialPrice.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div id=\"unionApply\" :class=\"themeName\">\r\n    <div class=\"apply_container\">\r\n      <div>\r\n        <!-- <el-input v-model=\"courseName\" placeholder=\"请输入联报课程名称\"></el-input> -->\r\n        <el-select v-model=\"id\" placeholder=\"请选择联报课程\">\r\n          <el-option :label=\"'无'\" :value=\"''\"></el-option>\r\n          <el-option v-for=\"item of unionCourse\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n        </el-select>\r\n      </div>\r\n      <div>\r\n        <el-input placeholder=\"联报课程价格\" :disabled=\"true\" :value=\"price\"></el-input>\r\n      </div>\r\n\r\n      <footer>\r\n        <!-- <button @click=\"submit\">提交</button> -->\r\n      </footer>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions } from \"vuex\";\r\nexport default {\r\n  props: {\r\n    courseId: [String, Number]\r\n  },\r\n  data() {\r\n    return {\r\n      id: \"\"\r\n    };\r\n  },\r\n  created() {\r\n \r\n  },\r\n  mounted() {\r\n    \r\n    this.init();\r\n  },\r\n  computed: {\r\n    ...mapState(\"course\", [\"unionCourse\"]),\r\n    price() {\r\n      for (let course of this.unionCourse) {\r\n        if (course.id === this.id) {\r\n          return course.price + \"元\";\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions(\"course\", [\"queryCourses\"]),\r\n    init() {\r\n      this.queryCourses(`2`).then(() => {\r\n        console.log(this.courseId);\r\n        this.id = this.courseId;\r\n      });\r\n    }\r\n  },\r\n  watch: {\r\n    id(val) {\r\n      this.$emit(\"course-id\", val);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"@/styles/mixin.scss\";\r\n@import \"@/styles/variables.scss\";\r\n.apply_container {\r\n  padding: 40px;\r\n  & > div:nth-child(1) {\r\n    margin-bottom: 30px;\r\n  }\r\n  .el-select {\r\n    width: 100%;\r\n  }\r\n  footer {\r\n    margin-top: 30px;\r\n    button {\r\n      @include buttonColor(\"g\") {\r\n        display: block;\r\n        margin: auto;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/course/components/unionApply.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.themeName,attrs:{\"id\":\"unionApply\"}},[_c('div',{staticClass:\"apply_container\"},[_c('div',[_c('el-select',{attrs:{\"placeholder\":\"请选择联报课程\"},model:{value:(_vm.id),callback:function ($$v) {_vm.id=$$v},expression:\"id\"}},[_c('el-option',{attrs:{\"label\":'无',\"value\":''}}),_vm._v(\" \"),_vm._l((_vm.unionCourse),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.name,\"value\":item.id}})})],2)],1),_vm._v(\" \"),_c('div',[_c('el-input',{attrs:{\"placeholder\":\"联报课程价格\",\"disabled\":true,\"value\":_vm.price}})],1),_vm._v(\" \"),_c('footer')])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-72d8a258\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/views/course/components/unionApply.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-72d8a258\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./unionApply.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./unionApply.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./unionApply.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-72d8a258\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./unionApply.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-72d8a258\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/course/components/unionApply.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div id=\"education_add_course\" :class=\"themeName\">\r\n    <div class=\"add_course_container\">\r\n      <el-form ref=\"form\" :model=\"courseMessage\" label-width=\"95px\">\r\n        <el-form-item prop=\"name\" label=\"课程名称\">\r\n          <el-row>\r\n            <el-col :span=\"12\">\r\n              <el-input v-model=\"courseMessage.name\"></el-input>\r\n            </el-col>\r\n          </el-row>\r\n        </el-form-item>\r\n        <el-row>\r\n          <el-col :span=\"9\">\r\n            <el-form-item label=\"科目选择\">\r\n              <el-row>\r\n                <el-col :span=\"24\">\r\n                  <el-row :gutter=\"4\">\r\n                    <el-col :span=\"10\">\r\n                      <el-select v-model=\"courseMessage.subjectDict\">\r\n                        <el-option\r\n                          v-for=\"(item,index) of subjectList\"\r\n                          :key=\"index\"\r\n                          :label=\"item.label\"\r\n                          :value=\"item.value\"\r\n                        ></el-option>\r\n                      </el-select>\r\n                    </el-col>\r\n                    <el-col :span=\"10\">\r\n                      <el-input\r\n                        v-show=\"courseMessage.subjectDict==='11'\"\r\n                        v-model=\"courseMessage.otherSubject\"\r\n                      ></el-input>\r\n                    </el-col>\r\n                  </el-row>\r\n                </el-col>\r\n              </el-row>\r\n            </el-form-item>\r\n          </el-col>\r\n\r\n          <el-col :span=\"10\">\r\n            <el-form-item label=\"学习阶段\">\r\n              <el-row>\r\n                <el-col :span=\"10\">\r\n                  <el-select v-model=\"courseMessage.teachAreasDict\">\r\n                    <el-option\r\n                      v-for=\"item of teachAreas\"\r\n                      :label=\"item.label\"\r\n                      :value=\"item.value\"\r\n                      :key=\"item.value\"\r\n                    ></el-option>\r\n                  </el-select>\r\n                </el-col>\r\n              </el-row>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-row>\r\n          <el-col :span=\"9\">\r\n            <el-form-item label=\"开课时间\">\r\n              <el-row :gutter=\"4\">\r\n                <el-col :span=\"20\">\r\n                  <el-date-picker\r\n                    v-model=\"courseMessage.startTime\"\r\n                    type=\"datetime\"\r\n                    placeholder=\"选择日期时间\"\r\n                    value-format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    :picker-options=\"{\r\n                      disabledDate(date){\r\n          \r\n                        if(new Date(date).getTime()<new Date().getTime()){\r\n                          return true\r\n                        }\r\n                        if(new Date(date).getTime()<new Date(courseMessage.endTime).getTime()){\r\n                          return true\r\n                        }\r\n\r\n                      }\r\n                    }\"\r\n                  ></el-date-picker>\r\n                </el-col>\r\n              </el-row>\r\n            </el-form-item>\r\n          </el-col>\r\n\r\n          <el-col :span=\"10\">\r\n            <el-form-item label=\"截止时间\">\r\n              <el-row :gutter=\"4\">\r\n                <el-col :span=\"20\">\r\n                  <el-date-picker\r\n                    v-model=\"courseMessage.endTime\"\r\n                    type=\"datetime\"\r\n                    placeholder=\"选择日期时间\"\r\n                    value-format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    :picker-options=\"{\r\n                      disabledDate(date){\r\n\r\n                        if(new Date(date).getTime()<new Date().getTime()){\r\n                          return true\r\n                        }\r\n          \r\n                        if(new Date(date).getTime()>new Date(courseMessage.startTime).getTime()){\r\n                          return true\r\n                        }\r\n\r\n                      }\r\n                    }\"\r\n                  ></el-date-picker>\r\n                </el-col>\r\n              </el-row>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-row v-for=\"(item,index) of courseMessage.teacherList\" :key=\"`teacher_${index}`\">\r\n          <el-col :span=\"9\">\r\n            <el-form-item prop=\"teacherList\" :label=\"`教 师 ${numberToChinese(index+1)}`\">\r\n              <el-row>\r\n                <el-col :span=\"10\">\r\n                  <!-- <el-input v-model=\"item.teacherName\"></el-input> -->\r\n                  <!-- \r\n                  <el-autocomplete\r\n                    class=\"inline-input\"\r\n                    v-model=\"item.teacherName\"\r\n                    :fetch-suggestions=\"querySearch\"\r\n                    placeholder=\"请输入内容\"\r\n                  ></el-autocomplete>-->\r\n\r\n                  <el-select v-model=\"item.teacherId\">\r\n                    <el-option\r\n                      v-for=\"item of teachers\"\r\n                      :key=\"item.id\"\r\n                      :label=\"item.value\"\r\n                      :value=\"item.id\"\r\n                    ></el-option>\r\n                  </el-select>\r\n                </el-col>\r\n              </el-row>\r\n            </el-form-item>\r\n          </el-col>\r\n\r\n          <el-col :span=\"14\">\r\n            <el-form-item prop=\"arrangeList\" label=\"课  时  数\">\r\n              <el-row v-if=\"!item.schedule\">\r\n                <el-col :span=\"6\">\r\n                  <el-select\r\n                    v-model=\"item.courseIndex\"\r\n                    :ref=\"`el_${index}`\"\r\n                    popper-class=\"courseNum\"\r\n                  >\r\n                    <el-option\r\n                      v-for=\"(courseClass,index) in item.arrangeList\"\r\n                      :label=\"`${index+1}课时`\"\r\n                      :value=\"index\"\r\n                      :key=\"index\"\r\n                    ></el-option>\r\n                  </el-select>\r\n                </el-col>\r\n                <el-col :span=\"18\">\r\n                  <span @click=\"arrangement(item)\" class=\"_operate\">课程安排</span>\r\n                </el-col>\r\n              </el-row>\r\n\r\n              <el-row :gutter=\"2\" v-else>\r\n                <el-col :span=\"6\">\r\n                  <el-date-picker\r\n                    value-format=\"yyyy-MM-dd\"\r\n                    v-model=\"item.arrangeList[item.courseIndex].courseDay\"\r\n                    type=\"date\"\r\n                    placeholder=\"选择日期\"\r\n                  ></el-date-picker>\r\n                </el-col>\r\n                <el-col :span=\"5\">\r\n                  <el-time-picker\r\n                    placeholder=\"起始时间\"\r\n                    v-model=\"item.arrangeList[item.courseIndex].courseStartTime\"\r\n                    value-format=\"HH:mm:ss\"\r\n                  ></el-time-picker>\r\n                </el-col>\r\n                <el-col :span=\"5\">\r\n                  <el-time-picker\r\n                    placeholder=\"结束时间\"\r\n                    v-model=\"item.arrangeList[item.courseIndex].courseEndTime\"\r\n                    :picker-options=\"{\r\n                      selectableRange: `${item.arrangeList[item.courseIndex].courseStartTime} - 23:30:00`,\r\n                    }\"\r\n                    value-format=\"HH:mm:ss\"\r\n                  ></el-time-picker>\r\n                </el-col>\r\n                <el-col :span=\"1\">\r\n                  <span @click=\"addClass(item)\" class=\"_operate\">保存</span>\r\n                </el-col>\r\n              </el-row>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-row>\r\n          <el-col :span=\"24\">\r\n            <el-form-item label-width=\"0px\">\r\n              <ec-button @click.native=\"addTeacher\">添加教师+</ec-button>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-row>\r\n          <el-col :span=\"13\">\r\n            <el-form-item label=\"上课地址\">\r\n              <el-row>\r\n                <el-col :span=\"24\">\r\n                  <div class=\"course_area\">\r\n                    <!-- <el-select v-model=\"courseMessage.province\" placeholder=\"省\">\r\n                      <el-option label=\"10课时\" value=\"1\"></el-option>\r\n                      <el-option label=\"15课时\" value=\"2\"></el-option>\r\n                    </el-select>\r\n                    <span class=\"_tip\">省</span>-->\r\n                    <el-select v-model=\"courseMessage.city\" placeholder=\"市\">\r\n                      <el-option\r\n                        v-for=\"(item,index) of city_list\"\r\n                        :key=\"`city_${index}`\"\r\n                        :label=\"item.city\"\r\n                        :value=\"item.id\"\r\n                      ></el-option>\r\n                    </el-select>\r\n                    <span class=\"_tip\">市</span>\r\n                    <el-select v-model=\"courseMessage.area\" placeholder=\"区/县\">\r\n                      <el-option\r\n                        v-for=\"(item,index) of country_list\"\r\n                        :key=\"`country_${index}`\"\r\n                        :label=\"item.country\"\r\n                        :value=\"item.id\"\r\n                      ></el-option>\r\n                    </el-select>\r\n                    <span class=\"_tip\">区</span>\r\n                    <el-input placeholder=\"请输入具体地址\" v-model=\"courseMessage.address\"></el-input>\r\n                    <span @click=\"location\" class=\"position\">定位</span>\r\n                  </div>\r\n                </el-col>\r\n              </el-row>\r\n              <el-row>\r\n                <p style=\"color:red;font-size:12px\">提示：可通过标注地图来上传详细地址,也可自行补充。</p>\r\n              </el-row>\r\n            </el-form-item>\r\n            <el-row :gutter=\"6\">\r\n              <el-col :span=\"8\">\r\n                <el-form-item label=\"标准价格\">\r\n                  <el-input :min=\"0\" type=\"number\" v-model=\"courseMessage.price\"></el-input>\r\n                </el-form-item>\r\n              </el-col>\r\n              <el-col :span=\"8\">\r\n                <el-form-item label=\"报名上线\">\r\n                  <el-input :min=\"0\" type=\"number\" v-model=\"courseMessage.maxNumber\"></el-input>\r\n                </el-form-item>\r\n              </el-col>\r\n            </el-row>\r\n            <el-row>\r\n              <el-col :span=\"12\">\r\n                <el-row>\r\n                  <el-col :span=\"24\">\r\n                    <el-form-item :label=\"`活动一`\">\r\n                      <div class=\"course_activity\">\r\n                        <el-select v-model=\"activityUnion\">\r\n                          <el-option label=\"联报\" value=\"1\"></el-option>\r\n                        </el-select>\r\n\r\n                        <el-popover popper-class=\"detail_pop\" placement=\"right\" width=\"400\">\r\n                          <union-apply\r\n                            :courseId=\"courseMessage.uniteCourseId\"\r\n                            @course-id=\"onCourseId\"\r\n                          ></union-apply>\r\n                          <span slot=\"reference\" class=\"_operate\">编辑</span>\r\n                        </el-popover>\r\n                      </div>\r\n                    </el-form-item>\r\n                  </el-col>\r\n                </el-row>\r\n\r\n                <el-row>\r\n                  <el-col :span=\"24\">\r\n                    <el-form-item :label=\"`活动二`\">\r\n                      <div class=\"course_activity\">\r\n                        <el-select v-model=\"activityPrice\">\r\n                          <el-option label=\"特价\" value=\"2\"></el-option>\r\n                        </el-select>\r\n                        <el-popover popper-class=\"detail_pop\" placement=\"right\" width=\"400\">\r\n                          <special-price\r\n                            :specialPrice=\"courseMessage.specialPrice\"\r\n                            @special-price=\"onSpecialPrice\"\r\n                          ></special-price>\r\n                          <span slot=\"reference\" class=\"_operate\">编辑</span>\r\n                        </el-popover>\r\n                      </div>\r\n                    </el-form-item>\r\n                  </el-col>\r\n                </el-row>\r\n              </el-col>\r\n              <el-col :push=\"4\" :span=\"7\">\r\n                <!-- <div class=\"upload\"></div> -->\r\n                <el-upload\r\n                  :action=\"uploadUrl\"\r\n                  accept=\"image/*, video/*\"\r\n                  :before-upload=\"beforeUploadVideo\"\r\n                  :on-success=\"handleVideoSuccess\"\r\n                  :on-progress=\"uploadVideoProcess\"\r\n                  :limit=\"3\"\r\n                  :on-exceed=\"handleExceed\"\r\n                  :file-list=\"files\"\r\n                  :headers=\"upLoadheader\"\r\n                  list-type=\"picture\"\r\n                >\r\n                  <el-progress\r\n                    v-if=\"videoFlag == true\"\r\n                    type=\"circle\"\r\n                    :percentage=\"videoUploadPercent\"\r\n                  ></el-progress>\r\n                  <div v-if=\"courseMessage.fileList.length<3&&!videoFlag\" class=\"upload\"></div>\r\n                  <div\r\n                    v-if=\"courseMessage.fileList.length>2\"\r\n                    class=\"el-upload__tip\"\r\n                    slot=\"tip\"\r\n                  >最多只能上传3张图片</div>\r\n                  <div v-show=\"showTip\" slot=\"tip\" class=\"el-upload__tip\">上传内容不超过10m</div>\r\n                </el-upload>\r\n              </el-col>\r\n            </el-row>\r\n          </el-col>\r\n\r\n          <el-col :span=\"11\">\r\n            <el-form-item>\r\n              <el-row>\r\n                <el-col :span=\"24\">\r\n                  <div id=\"map\"></div>\r\n                </el-col>\r\n              </el-row>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-row>\r\n          <el-col :span=\"6\">\r\n            <el-form-item label=\"优惠券\">\r\n              <el-select multiple :disabled=\"!isAgainEdit\" v-model=\"couponIds\">\r\n                <el-option\r\n                  v-for=\"item of couponList\"\r\n                  :key=\"item.couponId\"\r\n                  :label=\"item.couponText\"\r\n                  :value=\"item.couponId\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-row>\r\n          <el-col :span=\"6\">\r\n            <el-form-item label=\"服务电话\">\r\n              <el-input type=\"tel\" v-model=\"courseMessage.phone\" placeholder=\"请输入电话号码\"></el-input>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-row>\r\n          <el-col :span=\"18\">\r\n            <el-form-item label=\"课程介绍\">\r\n              <div id=\"_editor\"></div>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <!-- <el-row>\r\n          <el-col :span=\"5\">\r\n            <el-form-item>\r\n              <ec-button @click.native=\"uploadImage\">上传图片</ec-button>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>-->\r\n      </el-form>\r\n\r\n      <div class=\"add_course_footer\">\r\n        <button @click=\"save('1','1')\">保存</button>\r\n        <button\r\n          v-show=\"courseDetails.status==='1'||$route.query.status==='1'\"\r\n          @click=\"save('1','2')\"\r\n        >上架</button>\r\n        <ec-button @click.native=\"cancel\">取消</ec-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport EcInput from \"@/components/EducationInput.vue\";\r\nimport EcButton from \"@/components/EducationButton\";\r\nimport { NumberToChinese } from \"@/utils\";\r\nimport { city_list, country_list } from \"@/utils/area\";\r\nimport { getAccountInfo } from \"@/utils/auth\";\r\nimport SpecialPrice from \"./components/specialPrice\";\r\nimport unionApply from \"./components/unionApply\";\r\nimport { mapState, mapActions, mapGetters, mapMutations } from \"vuex\";\r\nimport { baseUrl } from \"@/utils/env\";\r\nimport { getToken, removeToken } from \"@/utils/auth\";\r\nlet numberToChinese = new NumberToChinese();\r\nconst Editor = require(\"wangeditor\");\r\nexport default {\r\n  data() {\r\n    return {\r\n      files: [],\r\n      uploadUrl: \"\",\r\n      upLoadheader: {},\r\n      visible: false,\r\n      courseMessage: {\r\n        lon: \"\",\r\n        lat: \"\",\r\n        name: \"\",\r\n        subjectDict: \"1\",\r\n        otherSubject: \"\",\r\n        teachAreasDict: \"1\",\r\n        startTime: \"\",\r\n        endTime: \"\",\r\n        teacherList: [\r\n          {\r\n            teacherName: \"\",\r\n            // teacherIndex: 0,\r\n            teacherId: \"\",\r\n            arrangeList: [\r\n              {\r\n                courseDay: \"\",\r\n                courseStartTime: \"\",\r\n                courseEndTime: \"\"\r\n              }\r\n            ],\r\n            courseNum: 0,\r\n            courseIndex: 0,\r\n            schedule: false\r\n          }\r\n        ],\r\n        fileList: [],\r\n        city: \"\",\r\n        area: \"\",\r\n        address: \"\",\r\n        price: \"\",\r\n        specialPrice: \"\",\r\n        maxNumber: \"\",\r\n        couponList: [],\r\n        phone: \"\",\r\n        describes: \"\",\r\n        uniteCourseId: \"\"\r\n      },\r\n      couponIds: [],\r\n      activityUnion: \"1\",\r\n      activityPrice: \"2\",\r\n      marker: \"\",\r\n      fileList: [],\r\n      videoFlag: false,\r\n      showTip: false,\r\n      videoUploadPercent: 0, //进度条进度\r\n      map: \"\",\r\n      editor: \"\",\r\n      geocoder: \"\", //地址信息插件\r\n      rules: {\r\n        name: { message: \"请输入课程名称\" },\r\n        startTime: { message: \"请输入开课时间\" },\r\n        endTime: { message: \"请输入截止时间\" },\r\n        teacherList: {\r\n          message: \"请输入课程时间\"\r\n        },\r\n        // city: { message: \"请输入所在市\" },\r\n        // area: { message: \"请输入所在区\" },\r\n        address: { message: \"请输入所在具体街道地址\" },\r\n        price: {\r\n          message: \"请输入标准价格\"\r\n        },\r\n        maxNumber: {\r\n          message: \"请输入报名人数上限\"\r\n        },\r\n        phone: {\r\n          message: \"请输入服务电话\"\r\n        },\r\n        describes: {\r\n          message: \"请输入课程介绍\"\r\n        }\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    if (this.isAgainEdit) {\r\n      this.courseMessage.specialPrice = this.courseDetails.specialPrice;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initUploadUrl();\r\n    this.initMap();\r\n\r\n    this.initEditor();\r\n    this.initSubject();\r\n    this.initTeachAreas();\r\n    // this.initStartTimeOrEndTime();\r\n    this.initTeachers();\r\n\r\n    this.initData();\r\n  },\r\n  computed: {\r\n    ...mapState(\"course\", [\r\n      \"subjectList\",\r\n      \"teachAreas\",\r\n      \"teacherList\",\r\n      \"couponShow\",\r\n      \"courseDetails\",\r\n      \"courseData\",\r\n      \"isAgainEdit\",\r\n      \"courseId\",\r\n      \"couponList\"\r\n    ]),\r\n    ...mapGetters(\"course\", [\"teachers\"]),\r\n    city_list() {\r\n      let arr = [];\r\n      for (let [id, city] of Object.entries(city_list)) {\r\n        arr.push({ id, city });\r\n      }\r\n      return arr;\r\n    },\r\n    country_list() {\r\n      let arr1 = [];\r\n      let city_mark = this.courseMessage.city.slice(0, 4);\r\n      for (let [id, country] of Object.entries(country_list)) {\r\n        let country_mark = id.slice(0, 4);\r\n        if (city_mark == country_mark) {\r\n          arr1.push({ id: id, country: country });\r\n        }\r\n      }\r\n      // if (arr1.length) this.courseMessage.area = arr1[0].id;\r\n      return arr1.length ? arr1 : [];\r\n    }\r\n  },\r\n  watch: {},\r\n  methods: {\r\n    ...mapActions(\"course\", [\r\n      \"addCourse\",\r\n      \"getDictSubject\",\r\n      \"getDictTeachAreasDict\",\r\n      \"queryTeacher\",\r\n      \"queryCoupon\",\r\n      \"editCourse\"\r\n    ]),\r\n    ...mapMutations(\"course\", [\"SAVE_COURSE_DATA\", \"SET_AGAIN_EDIT\"]),\r\n    initUploadUrl() {\r\n      this.upLoadheader = { token: getToken() };\r\n      this.uploadUrl = baseUrl + \"agency/front/system/uploadSingle/agency\";\r\n    },\r\n    //校验\r\n    validate() {\r\n      let num = 0;\r\n      for (let [key, value] of Object.entries(this.rules)) {\r\n        if (key !== \"teacherList\") {\r\n          if (!this.courseMessage[key]) {\r\n            ++num;\r\n            this.$message({\r\n              type: \"error\",\r\n              message: value.message,\r\n              duration: 2500\r\n            });\r\n            return;\r\n          }\r\n        } else {\r\n          for (let [index, teacher] of this.courseMessage[key].entries()) {\r\n            if (teacher.schedule) {\r\n              this.$message({\r\n                type: \"warning\",\r\n                message: \"请保存课程安排时间\",\r\n                duration: 2500\r\n              });\r\n              return;\r\n            }\r\n            if (!teacher.teacherId) {\r\n              this.$message({\r\n                type: \"error\",\r\n                message: \"请选择授课老师\",\r\n                duration: 2500\r\n              });\r\n              return;\r\n            }\r\n            if (\r\n              teacher.arrangeList.length > 1 &&\r\n              !teacher.arrangeList[teacher.arrangeList.length - 1].courseDay\r\n            ) {\r\n              teacher.arrangeList.splice(teacher.arrangeList.length - 1, 1);\r\n            }\r\n            for (let arrange of teacher.arrangeList) {\r\n              if (\r\n                !arrange.courseDay ||\r\n                !arrange.courseStartTime ||\r\n                !arrange.courseEndTime\r\n              ) {\r\n                ++num;\r\n                console.log(this.$refs[`el_${index}`]);\r\n                this.$refs[`el_${index}`][0].focus();\r\n                this.$message({\r\n                  type: \"error\",\r\n                  message: value.message,\r\n                  duration: 2500\r\n                });\r\n                return;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (num) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    },\r\n    //初始化科目\r\n    initSubject() {\r\n      this.getDictSubject();\r\n    },\r\n    //初始化学习阶段\r\n    initTeachAreas() {\r\n      this.getDictTeachAreasDict();\r\n    },\r\n    // 初始化富文本编辑器\r\n    initEditor() {\r\n      if (!this.editor) {\r\n        this.editor = new Editor(\"#_editor\");\r\n\r\n        this.editor.customConfig.menus = [\r\n          \"head\", // 标题\r\n          \"bold\", // 粗体\r\n          \"fontSize\", // 字号\r\n          \"fontName\", // 字体\r\n          \"italic\", // 斜体\r\n          \"underline\", // 下划线\r\n          \"strikeThrough\", // 删除线\r\n          \"foreColor\", // 文字颜色\r\n          \"backColor\", // 背景颜色\r\n          \"list\", // 列表\r\n          \"justify\", // 对齐方式\r\n          \"emoticon\", // 表情\r\n          \"image\", // 插入图片\r\n          \"table\", // 表格\r\n          \"undo\" // 撤销\r\n        ];\r\n        this.editor.customConfig.uploadImgServer = this.uploadUrl;\r\n        this.editor.customConfig.uploadImgMaxSize = 10 * 1024 * 1024;\r\n        this.editor.customConfig.uploadImgMaxLength = 1;\r\n        this.editor.customConfig.uploadFileName = \"file\";\r\n        this.editor.customConfig.uploadImgHeaders = {\r\n          token: getToken()\r\n        };\r\n        this.editor.customConfig.uploadImgTimeout = 5000;\r\n        this.editor.customConfig.uploadImgHooks = {\r\n          error: (xhr, editor) => {\r\n            this.$message({\r\n              type: \"error\",\r\n              message: \"图片上传出错\",\r\n              duration: 2000\r\n            });\r\n          },\r\n\r\n          fail: function(xhr, editor, result) {\r\n            this.$message({\r\n              type: \"error\",\r\n              message: \"插入图片错误\",\r\n              duration: 2000\r\n            });\r\n          },\r\n\r\n          timeout: function(xhr, editor) {\r\n            this.$message.error({\r\n              message: \"图片上传超时\",\r\n              duration: 2000\r\n            });\r\n          },\r\n\r\n          customInsert: (insertImg, result, editor) => {\r\n            console.log(result);\r\n            this.fileList.push({\r\n              mediaType: \"1\",\r\n              path: result.data.url,\r\n              type: '2'\r\n            });\r\n            insertImg(result.data.host + result.data.url);\r\n          }\r\n        };\r\n\r\n        this.editor.customConfig.onchange = html => {\r\n          this.courseMessage.describes = html;\r\n        };\r\n\r\n        this.editor.create();\r\n      }\r\n    },\r\n    //初始化机构教师\r\n    initTeachers() {\r\n      this.queryTeacher(`agencyId=${getAccountInfo().agencyId}`);\r\n    },\r\n    // 初始化数据(针对继续编辑)\r\n    initData() {\r\n      if (this.isAgainEdit) {\r\n        console.log(this.courseDetails);\r\n        this.courseMessage = Object.assign(\r\n          {},\r\n          this.courseData,\r\n          this.courseDetails\r\n        );\r\n        if (this.courseData) {\r\n          this.files = this.courseData.files;\r\n          this.editor.txt.html(this.courseData.describes);\r\n        } else {\r\n          this.editor.txt.html(this.courseDetails.describes);\r\n          this.couponIds = this.courseDetails.couponList.map(item => {\r\n            return item.couponId;\r\n          });\r\n          console.log(this.couponIds);\r\n        }\r\n        this.fileList = this.courseDetails.fileList;\r\n        this.tranformTeacherList(this.courseDetails.teacherList);\r\n\r\n        this.queryCoupon(`courseId=${this.courseId}`);\r\n      }\r\n    },\r\n\r\n    //将返回的教师数组转化为可用参数\r\n    tranformTeacherList(arr) {\r\n      for (let [index, item] of arr.entries()) {\r\n        this.$set(item, \"schedule\", false);\r\n        this.$set(item, \"courseIndex\", 0);\r\n      }\r\n    },\r\n    //数字转换为汉字\r\n    numberToChinese(num) {\r\n      return numberToChinese.fromTo(num);\r\n    },\r\n    //添加老师\r\n    addTeacher() {\r\n      this.courseMessage.teacherList.push({\r\n        teacherName: \"\",\r\n        // teacherIndex: 0,\r\n        teacherId: \"\",\r\n        arrangeList: [\r\n          {\r\n            courseDay: \"\",\r\n            courseStartTime: \"\",\r\n            courseEndTime: \"\"\r\n          }\r\n        ],\r\n        courseIndex: 0,\r\n        courseNum: 0,\r\n        schedule: false\r\n      });\r\n    },\r\n    //课程安排\r\n    arrangement(obj) {\r\n      console.log(obj);\r\n      obj.schedule = true;\r\n    },\r\n    //添加课时\r\n    addClass(obj) {\r\n      let item = obj.arrangeList[obj.courseIndex];\r\n      if (item.courseDay && item.courseStartTime && item.courseEndTime) {\r\n        obj.schedule = false;\r\n        if (obj.courseIndex === obj.arrangeList.length - 1) {\r\n          obj.arrangeList.push({\r\n            courseDay: \"\",\r\n            courseStartTime: \"\",\r\n            courseEndTime: \"\"\r\n          });\r\n        }\r\n      } else {\r\n        this.$message({\r\n          type: \"error\",\r\n          message: \"请输入课程时间\",\r\n          duration: 2000\r\n        });\r\n      }\r\n    },\r\n    onSpecialPrice(val) {\r\n      this.courseMessage.specialPrice = Number(val);\r\n    },\r\n    onCourseId(val) {\r\n      this.courseMessage.uniteCourseId = val;\r\n    },\r\n    cancel() {\r\n      this.SET_AGAIN_EDIT(false);\r\n\r\n      this.$router.push(\"/course\");\r\n    },\r\n    //初始化地图\r\n    initMap() {\r\n      this.map = new AMap.Map(\"map\", {\r\n        zoom: 30\r\n      });\r\n\r\n      this.map.on(\"click\", event => {\r\n        let lnglat = event.lnglat;\r\n        if (this.marker) {\r\n          this.map.remove(this.marker);\r\n        }\r\n        this.marker = new AMap.Marker({\r\n          position: lnglat,\r\n          title: \"我的机构\"\r\n        });\r\n        this.map.add(this.marker);\r\n        this.courseMessage.lon = lnglat.lng + \"\";\r\n        this.courseMessage.lat = lnglat.lat + \"\";\r\n        this.geocoder.getAddress(lnglat, (status, result) => {\r\n          if (status === \"complete\" && result.info === \"OK\") {\r\n            // console.log(result);\r\n            let address = result.regeocode.addressComponent;\r\n\r\n            this.courseMessage.city = address.adcode.slice(0, 4) + \"00\";\r\n\r\n            this.courseMessage.area = address.adcode;\r\n\r\n            this.courseMessage.address =\r\n              address.township +\r\n              \" \" +\r\n              address.street +\r\n              \" \" +\r\n              address.streetNumber;\r\n          }\r\n        });\r\n      });\r\n\r\n      AMap.plugin([\"AMap.Geolocation\", \"AMap.Geocoder\"], () => {\r\n        //异步同时加载多个插件\r\n        let geolocation = new AMap.Geolocation({\r\n          timeout: 5000,\r\n          zoomToAccuracy: true,\r\n          buttonPosition: \"RB\"\r\n        });\r\n        geolocation.getCurrentPosition();\r\n        AMap.event.addListener(\r\n          geolocation,\r\n          \"complete\",\r\n          this.onMapGeolocationComplete\r\n        );\r\n        AMap.event.addListener(\r\n          geolocation,\r\n          \"error\",\r\n          this.onMapGeolocationError\r\n        );\r\n\r\n        this.map.addControl(geolocation);\r\n\r\n        this.geocoder = new AMap.Geocoder({});\r\n      });\r\n    },\r\n    onMapGeolocationComplete(data) {\r\n      let address = data.addressComponent;\r\n      this.courseMessage.city = address.adcode.slice(0, 4) + \"00\";\r\n      this.courseMessage.area = address.adcode;\r\n      this.courseMessage.address =\r\n        address.township + \" \" + address.street + \" \" + address.streetNumber;\r\n      this.courseMessage.lon = data.position.lng + \"\";\r\n      this.courseMessage.lat = data.position.lat + \"\";\r\n    },\r\n    onMapGeolocationError(data) {\r\n      this.$message.error(\"地图定位失败，请自行标注！\");\r\n    },\r\n    //编码转换为地址\r\n    transformLocal() {\r\n      let city = city_list[this.courseMessage.city];\r\n      let area = country_list[this.courseMessage.area];\r\n      console.log(city + area + this.courseMessage.address);\r\n      return city + area + this.courseMessage.address;\r\n    },\r\n\r\n    location() {\r\n      this.geocoder.getLocation(this.transformLocal(), (status, result) => {\r\n        if (status === \"complete\" && result.info === \"OK\") {\r\n          this.courseMessage.lon = result.geocodes[0].location.lng + \"\";\r\n          this.courseMessage.lat = result.geocodes[0].location.lat + \"\";\r\n          if (this.marker) {\r\n            this.map.remove(this.marker);\r\n          }\r\n          this.marker = new AMap.Marker({\r\n            position: result.geocodes[0].location,\r\n            title: \"我的机构\"\r\n          });\r\n          this.map.add(this.marker);\r\n          this.map.setFitView(this.marker);\r\n        } else {\r\n          this.$message.error({\r\n            message: \"定位失败，请稍后再试\",\r\n            duration: 2000\r\n          });\r\n        }\r\n      });\r\n    },\r\n    //上传成功回调\r\n    handleVideoSuccess(res, file) {\r\n      this.videoFlag = false;\r\n      this.videoUploadPercent = 0;\r\n      let type = \"1\";\r\n      console.log(res);\r\n      if (res.code != 200) {\r\n        this.$message.error(\"视频上传失败，请重新上传！\");\r\n      } else {\r\n        this.fileList.push({\r\n          mediaType: \"1\",\r\n          path: res.data.url,\r\n          type: type\r\n        });\r\n      }\r\n    },\r\n    //上传数量超标\r\n    handleExceed(files, fileList) {\r\n      this.$message.warning(\r\n        `当前限制选择 3 个文件，本次选择了 ${\r\n          files.length\r\n        } 个文件，共选择了 ${files.length + fileList.length} 个文件`\r\n      );\r\n    },\r\n    //展示视频上传进度\r\n    uploadVideoProcess(event, file, fileList) {\r\n      console.log(file.type);\r\n      if (/video\\/*/.test(file.type)) {\r\n        this.videoFlag = true;\r\n        this.videoUploadPercent = file.percentage.toFixed(0) * 1;\r\n      }\r\n    },\r\n    //上传前\r\n    beforeUploadVideo(file) {\r\n      const isLt500 = file.size / 1000 / 1000 < 10;\r\n      if (!isLt500) {\r\n        this.showTip = true;\r\n        return false;\r\n      }\r\n      this.showTip = false;\r\n    },\r\n    getTeacherMessage(list) {\r\n      for (let t of list) {\r\n        // t.teacherName = this.teachers[t.teacherIndex].value;\r\n        // t.teacherId = this.teachers[t.teacherIndex].id;\r\n        let teacher = this.teachers.find(item => {\r\n          return item.id === t.teacherId;\r\n        });\r\n        t.teacherName = teacher.value;\r\n\r\n        t.courseNum = t.arrangeList.length;\r\n      }\r\n\r\n      return list;\r\n    },\r\n    save(status, type) {\r\n      if (this.validate()) {\r\n        let teacherList = this.getTeacherMessage(\r\n          this.courseMessage.teacherList\r\n        );\r\n        let couponList = this.couponIds.map(item => {\r\n          return { couponId: item, couponText: \"\" };\r\n        });\r\n        let data = Object.assign(this.courseMessage, {\r\n          status,\r\n          teacherList,\r\n          fileList: this.fileList,\r\n          couponList\r\n        });\r\n        if (this.isAgainEdit) {\r\n          this.editCourse({ ...data, id: this.courseId }).then(res => {\r\n            if (res.code === 200) {\r\n              if (type === \"2\") {\r\n                this.$router.push({\r\n                  path: \"/course-detail\",\r\n                  query: { courseId: this.courseId }\r\n                });\r\n                this.SAVE_COURSE_DATA({ ...data, files: this.files });\r\n\r\n                this.SET_AGAIN_EDIT(false);\r\n              } else {\r\n                this.$message({\r\n                  type: \"success\",\r\n                  message: \"课程已保存\",\r\n                  duration: 2000,\r\n                  onClose: () => {\r\n                    this.$router.push(\"/course\");\r\n                    this.SET_AGAIN_EDIT(false);\r\n                  }\r\n                });\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          this.addCourse(data).then(res => {\r\n            if (res.code === 200) {\r\n              if (type === \"2\") {\r\n                console.log(this.files);\r\n                this.SAVE_COURSE_DATA({ ...data, files: this.files });\r\n                this.$router.push({\r\n                  path: \"/course-detail\",\r\n                  query: { courseId: res.data }\r\n                });\r\n              } else {\r\n                this.$message({\r\n                  type: \"success\",\r\n                  message: \"课程已保存\",\r\n                  duration: 2000,\r\n                  onClose: () => {\r\n                    this.$router.push(\"/course\");\r\n                  }\r\n                });\r\n              }\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    // courseMessage: {\r\n    //   handler(val) {\r\n    //     console.log(val);\r\n    //   },\r\n    //   deep: true\r\n    // }\r\n  },\r\n  components: {\r\n    EcInput,\r\n    EcButton,\r\n    SpecialPrice,\r\n    unionApply\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" >\r\n@import \"@/styles/mixin.scss\";\r\n@import \"@/styles/variables.scss\";\r\n#education_add_course {\r\n  width: 82%;\r\n  max-width: 1220px;\r\n  min-width: 1050px;\r\n  height: calc(100% - 100px);\r\n  margin-top: 20px;\r\n  margin-left: 80px;\r\n  border: 1px solid #e7edeb;\r\n  border-radius: 5px;\r\n  font-size: $font-size - 2px;\r\n  overflow: hidden;\r\n}\r\n\r\n.add_course_container {\r\n  padding-left: 50px;\r\n  padding-top: 20px;\r\n  padding-bottom: 15px;\r\n  height: 100%;\r\n  // background-color: #fafffb;\r\n  overflow: auto;\r\n  @include scroll-bar;\r\n  @include themify() {\r\n    background-color: themed(\"add-course-bgcolor\");\r\n  }\r\n  .el-form-item__label {\r\n    color: $font-color;\r\n    font-weight: 500;\r\n    text-align-last: justify;\r\n    text-align: justify;\r\n  }\r\n  .el-date-editor.el-input,\r\n  .el-date-editor.el-input__inner {\r\n    width: auto !important;\r\n  }\r\n  .course_area {\r\n    @include display;\r\n    ._tip {\r\n      margin: 0 10px;\r\n    }\r\n    .position {\r\n      flex: 0 0 40px;\r\n      margin-left: 10px;\r\n      @include colorFont;\r\n    }\r\n  }\r\n  .course_activity {\r\n    @include display;\r\n  }\r\n  ._operate {\r\n    display: block;\r\n    width: 80px;\r\n    text-align: center;\r\n    cursor: pointer;\r\n    transition: all 0.2s;\r\n    @include themify() {\r\n      color: themed(\"title-active\");\r\n    }\r\n    &:hover {\r\n      opacity: 0.8;\r\n    }\r\n  }\r\n  .upload {\r\n    width: 100px;\r\n    height: 100px;\r\n    cursor: pointer;\r\n    transition: all 0.1s;\r\n    @include themify() {\r\n      background: url(themed(\"upload-image\")) center/cover no-repeat;\r\n    }\r\n    &:hover {\r\n      @include themify() {\r\n        background: url(themed(\"upload-image-active\")) center/cover no-repeat;\r\n      }\r\n    }\r\n  }\r\n  .add_course_footer {\r\n    position: fixed;\r\n    bottom: 20px;\r\n    left: 40%;\r\n    & > button:nth-child(1) {\r\n      @include buttonColor(\"g\");\r\n    }\r\n    & > button:nth-child(2) {\r\n      @include buttonColor(\"c\");\r\n    }\r\n  }\r\n\r\n  #map {\r\n    width: 300px;\r\n    height: 300px;\r\n    position: absolute;\r\n    right: 90px;\r\n    top: -40px;\r\n  }\r\n  .el-upload__tip {\r\n    color: red;\r\n  }\r\n\r\n  #_editor {\r\n    .w-e-text-container {\r\n      height: 200px !important;\r\n    }\r\n  }\r\n}\r\n</style>\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/course/addCourse.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.themeName,attrs:{\"id\":\"education_add_course\"}},[_c('div',{staticClass:\"add_course_container\"},[_c('el-form',{ref:\"form\",attrs:{\"model\":_vm.courseMessage,\"label-width\":\"95px\"}},[_c('el-form-item',{attrs:{\"prop\":\"name\",\"label\":\"课程名称\"}},[_c('el-row',[_c('el-col',{attrs:{\"span\":12}},[_c('el-input',{model:{value:(_vm.courseMessage.name),callback:function ($$v) {_vm.$set(_vm.courseMessage, \"name\", $$v)},expression:\"courseMessage.name\"}})],1)],1)],1),_vm._v(\" \"),_c('el-row',[_c('el-col',{attrs:{\"span\":9}},[_c('el-form-item',{attrs:{\"label\":\"科目选择\"}},[_c('el-row',[_c('el-col',{attrs:{\"span\":24}},[_c('el-row',{attrs:{\"gutter\":4}},[_c('el-col',{attrs:{\"span\":10}},[_c('el-select',{model:{value:(_vm.courseMessage.subjectDict),callback:function ($$v) {_vm.$set(_vm.courseMessage, \"subjectDict\", $$v)},expression:\"courseMessage.subjectDict\"}},_vm._l((_vm.subjectList),function(item,index){return _c('el-option',{key:index,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":10}},[_c('el-input',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.courseMessage.subjectDict==='11'),expression:\"courseMessage.subjectDict==='11'\"}],model:{value:(_vm.courseMessage.otherSubject),callback:function ($$v) {_vm.$set(_vm.courseMessage, \"otherSubject\", $$v)},expression:\"courseMessage.otherSubject\"}})],1)],1)],1)],1)],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":10}},[_c('el-form-item',{attrs:{\"label\":\"学习阶段\"}},[_c('el-row',[_c('el-col',{attrs:{\"span\":10}},[_c('el-select',{model:{value:(_vm.courseMessage.teachAreasDict),callback:function ($$v) {_vm.$set(_vm.courseMessage, \"teachAreasDict\", $$v)},expression:\"courseMessage.teachAreasDict\"}},_vm._l((_vm.teachAreas),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1)],1)],1)],1),_vm._v(\" \"),_c('el-row',[_c('el-col',{attrs:{\"span\":9}},[_c('el-form-item',{attrs:{\"label\":\"开课时间\"}},[_c('el-row',{attrs:{\"gutter\":4}},[_c('el-col',{attrs:{\"span\":20}},[_c('el-date-picker',{attrs:{\"type\":\"datetime\",\"placeholder\":\"选择日期时间\",\"value-format\":\"yyyy-MM-dd HH:mm:ss\",\"picker-options\":{\n                    disabledDate: function disabledDate(date){\n        \n                      if(new Date(date).getTime()<new Date().getTime()){\n                        return true\n                      }\n                      if(new Date(date).getTime()<new Date(_vm.courseMessage.endTime).getTime()){\n                        return true\n                      }\n\n                    }\n                  }},model:{value:(_vm.courseMessage.startTime),callback:function ($$v) {_vm.$set(_vm.courseMessage, \"startTime\", $$v)},expression:\"courseMessage.startTime\"}})],1)],1)],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":10}},[_c('el-form-item',{attrs:{\"label\":\"截止时间\"}},[_c('el-row',{attrs:{\"gutter\":4}},[_c('el-col',{attrs:{\"span\":20}},[_c('el-date-picker',{attrs:{\"type\":\"datetime\",\"placeholder\":\"选择日期时间\",\"value-format\":\"yyyy-MM-dd HH:mm:ss\",\"picker-options\":{\n                    disabledDate: function disabledDate(date){\n\n                      if(new Date(date).getTime()<new Date().getTime()){\n                        return true\n                      }\n        \n                      if(new Date(date).getTime()>new Date(_vm.courseMessage.startTime).getTime()){\n                        return true\n                      }\n\n                    }\n                  }},model:{value:(_vm.courseMessage.endTime),callback:function ($$v) {_vm.$set(_vm.courseMessage, \"endTime\", $$v)},expression:\"courseMessage.endTime\"}})],1)],1)],1)],1)],1),_vm._v(\" \"),_vm._l((_vm.courseMessage.teacherList),function(item,index){return _c('el-row',{key:(\"teacher_\" + index)},[_c('el-col',{attrs:{\"span\":9}},[_c('el-form-item',{attrs:{\"prop\":\"teacherList\",\"label\":(\"教 师 \" + (_vm.numberToChinese(index+1)))}},[_c('el-row',[_c('el-col',{attrs:{\"span\":10}},[_c('el-select',{model:{value:(item.teacherId),callback:function ($$v) {_vm.$set(item, \"teacherId\", $$v)},expression:\"item.teacherId\"}},_vm._l((_vm.teachers),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.value,\"value\":item.id}})}),1)],1)],1)],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":14}},[_c('el-form-item',{attrs:{\"prop\":\"arrangeList\",\"label\":\"课  时  数\"}},[(!item.schedule)?_c('el-row',[_c('el-col',{attrs:{\"span\":6}},[_c('el-select',{ref:(\"el_\" + index),refInFor:true,attrs:{\"popper-class\":\"courseNum\"},model:{value:(item.courseIndex),callback:function ($$v) {_vm.$set(item, \"courseIndex\", $$v)},expression:\"item.courseIndex\"}},_vm._l((item.arrangeList),function(courseClass,index){return _c('el-option',{key:index,attrs:{\"label\":((index+1) + \"课时\"),\"value\":index}})}),1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":18}},[_c('span',{staticClass:\"_operate\",on:{\"click\":function($event){return _vm.arrangement(item)}}},[_vm._v(\"课程安排\")])])],1):_c('el-row',{attrs:{\"gutter\":2}},[_c('el-col',{attrs:{\"span\":6}},[_c('el-date-picker',{attrs:{\"value-format\":\"yyyy-MM-dd\",\"type\":\"date\",\"placeholder\":\"选择日期\"},model:{value:(item.arrangeList[item.courseIndex].courseDay),callback:function ($$v) {_vm.$set(item.arrangeList[item.courseIndex], \"courseDay\", $$v)},expression:\"item.arrangeList[item.courseIndex].courseDay\"}})],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":5}},[_c('el-time-picker',{attrs:{\"placeholder\":\"起始时间\",\"value-format\":\"HH:mm:ss\"},model:{value:(item.arrangeList[item.courseIndex].courseStartTime),callback:function ($$v) {_vm.$set(item.arrangeList[item.courseIndex], \"courseStartTime\", $$v)},expression:\"item.arrangeList[item.courseIndex].courseStartTime\"}})],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":5}},[_c('el-time-picker',{attrs:{\"placeholder\":\"结束时间\",\"picker-options\":{\n                    selectableRange: ((item.arrangeList[item.courseIndex].courseStartTime) + \" - 23:30:00\"),\n                  },\"value-format\":\"HH:mm:ss\"},model:{value:(item.arrangeList[item.courseIndex].courseEndTime),callback:function ($$v) {_vm.$set(item.arrangeList[item.courseIndex], \"courseEndTime\", $$v)},expression:\"item.arrangeList[item.courseIndex].courseEndTime\"}})],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":1}},[_c('span',{staticClass:\"_operate\",on:{\"click\":function($event){return _vm.addClass(item)}}},[_vm._v(\"保存\")])])],1)],1)],1)],1)}),_vm._v(\" \"),_c('el-row',[_c('el-col',{attrs:{\"span\":24}},[_c('el-form-item',{attrs:{\"label-width\":\"0px\"}},[_c('ec-button',{nativeOn:{\"click\":function($event){return _vm.addTeacher($event)}}},[_vm._v(\"添加教师+\")])],1)],1)],1),_vm._v(\" \"),_c('el-row',[_c('el-col',{attrs:{\"span\":13}},[_c('el-form-item',{attrs:{\"label\":\"上课地址\"}},[_c('el-row',[_c('el-col',{attrs:{\"span\":24}},[_c('div',{staticClass:\"course_area\"},[_c('el-select',{attrs:{\"placeholder\":\"市\"},model:{value:(_vm.courseMessage.city),callback:function ($$v) {_vm.$set(_vm.courseMessage, \"city\", $$v)},expression:\"courseMessage.city\"}},_vm._l((_vm.city_list),function(item,index){return _c('el-option',{key:(\"city_\" + index),attrs:{\"label\":item.city,\"value\":item.id}})}),1),_vm._v(\" \"),_c('span',{staticClass:\"_tip\"},[_vm._v(\"市\")]),_vm._v(\" \"),_c('el-select',{attrs:{\"placeholder\":\"区/县\"},model:{value:(_vm.courseMessage.area),callback:function ($$v) {_vm.$set(_vm.courseMessage, \"area\", $$v)},expression:\"courseMessage.area\"}},_vm._l((_vm.country_list),function(item,index){return _c('el-option',{key:(\"country_\" + index),attrs:{\"label\":item.country,\"value\":item.id}})}),1),_vm._v(\" \"),_c('span',{staticClass:\"_tip\"},[_vm._v(\"区\")]),_vm._v(\" \"),_c('el-input',{attrs:{\"placeholder\":\"请输入具体地址\"},model:{value:(_vm.courseMessage.address),callback:function ($$v) {_vm.$set(_vm.courseMessage, \"address\", $$v)},expression:\"courseMessage.address\"}}),_vm._v(\" \"),_c('span',{staticClass:\"position\",on:{\"click\":_vm.location}},[_vm._v(\"定位\")])],1)])],1),_vm._v(\" \"),_c('el-row',[_c('p',{staticStyle:{\"color\":\"red\",\"font-size\":\"12px\"}},[_vm._v(\"提示：可通过标注地图来上传详细地址,也可自行补充。\")])])],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":6}},[_c('el-col',{attrs:{\"span\":8}},[_c('el-form-item',{attrs:{\"label\":\"标准价格\"}},[_c('el-input',{attrs:{\"min\":0,\"type\":\"number\"},model:{value:(_vm.courseMessage.price),callback:function ($$v) {_vm.$set(_vm.courseMessage, \"price\", $$v)},expression:\"courseMessage.price\"}})],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":8}},[_c('el-form-item',{attrs:{\"label\":\"报名上线\"}},[_c('el-input',{attrs:{\"min\":0,\"type\":\"number\"},model:{value:(_vm.courseMessage.maxNumber),callback:function ($$v) {_vm.$set(_vm.courseMessage, \"maxNumber\", $$v)},expression:\"courseMessage.maxNumber\"}})],1)],1)],1),_vm._v(\" \"),_c('el-row',[_c('el-col',{attrs:{\"span\":12}},[_c('el-row',[_c('el-col',{attrs:{\"span\":24}},[_c('el-form-item',{attrs:{\"label\":\"活动一\"}},[_c('div',{staticClass:\"course_activity\"},[_c('el-select',{model:{value:(_vm.activityUnion),callback:function ($$v) {_vm.activityUnion=$$v},expression:\"activityUnion\"}},[_c('el-option',{attrs:{\"label\":\"联报\",\"value\":\"1\"}})],1),_vm._v(\" \"),_c('el-popover',{attrs:{\"popper-class\":\"detail_pop\",\"placement\":\"right\",\"width\":\"400\"}},[_c('union-apply',{attrs:{\"courseId\":_vm.courseMessage.uniteCourseId},on:{\"course-id\":_vm.onCourseId}}),_vm._v(\" \"),_c('span',{staticClass:\"_operate\",attrs:{\"slot\":\"reference\"},slot:\"reference\"},[_vm._v(\"编辑\")])],1)],1)])],1)],1),_vm._v(\" \"),_c('el-row',[_c('el-col',{attrs:{\"span\":24}},[_c('el-form-item',{attrs:{\"label\":\"活动二\"}},[_c('div',{staticClass:\"course_activity\"},[_c('el-select',{model:{value:(_vm.activityPrice),callback:function ($$v) {_vm.activityPrice=$$v},expression:\"activityPrice\"}},[_c('el-option',{attrs:{\"label\":\"特价\",\"value\":\"2\"}})],1),_vm._v(\" \"),_c('el-popover',{attrs:{\"popper-class\":\"detail_pop\",\"placement\":\"right\",\"width\":\"400\"}},[_c('special-price',{attrs:{\"specialPrice\":_vm.courseMessage.specialPrice},on:{\"special-price\":_vm.onSpecialPrice}}),_vm._v(\" \"),_c('span',{staticClass:\"_operate\",attrs:{\"slot\":\"reference\"},slot:\"reference\"},[_vm._v(\"编辑\")])],1)],1)])],1)],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"push\":4,\"span\":7}},[_c('el-upload',{attrs:{\"action\":_vm.uploadUrl,\"accept\":\"image/*, video/*\",\"before-upload\":_vm.beforeUploadVideo,\"on-success\":_vm.handleVideoSuccess,\"on-progress\":_vm.uploadVideoProcess,\"limit\":3,\"on-exceed\":_vm.handleExceed,\"file-list\":_vm.files,\"headers\":_vm.upLoadheader,\"list-type\":\"picture\"}},[(_vm.videoFlag == true)?_c('el-progress',{attrs:{\"type\":\"circle\",\"percentage\":_vm.videoUploadPercent}}):_vm._e(),_vm._v(\" \"),(_vm.courseMessage.fileList.length<3&&!_vm.videoFlag)?_c('div',{staticClass:\"upload\"}):_vm._e(),_vm._v(\" \"),(_vm.courseMessage.fileList.length>2)?_c('div',{staticClass:\"el-upload__tip\",attrs:{\"slot\":\"tip\"},slot:\"tip\"},[_vm._v(\"最多只能上传3张图片\")]):_vm._e(),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showTip),expression:\"showTip\"}],staticClass:\"el-upload__tip\",attrs:{\"slot\":\"tip\"},slot:\"tip\"},[_vm._v(\"上传内容不超过10m\")])],1)],1)],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":11}},[_c('el-form-item',[_c('el-row',[_c('el-col',{attrs:{\"span\":24}},[_c('div',{attrs:{\"id\":\"map\"}})])],1)],1)],1)],1),_vm._v(\" \"),_c('el-row',[_c('el-col',{attrs:{\"span\":6}},[_c('el-form-item',{attrs:{\"label\":\"优惠券\"}},[_c('el-select',{attrs:{\"multiple\":\"\",\"disabled\":!_vm.isAgainEdit},model:{value:(_vm.couponIds),callback:function ($$v) {_vm.couponIds=$$v},expression:\"couponIds\"}},_vm._l((_vm.couponList),function(item){return _c('el-option',{key:item.couponId,attrs:{\"label\":item.couponText,\"value\":item.couponId}})}),1)],1)],1)],1),_vm._v(\" \"),_c('el-row',[_c('el-col',{attrs:{\"span\":6}},[_c('el-form-item',{attrs:{\"label\":\"服务电话\"}},[_c('el-input',{attrs:{\"type\":\"tel\",\"placeholder\":\"请输入电话号码\"},model:{value:(_vm.courseMessage.phone),callback:function ($$v) {_vm.$set(_vm.courseMessage, \"phone\", $$v)},expression:\"courseMessage.phone\"}})],1)],1)],1),_vm._v(\" \"),_c('el-row',[_c('el-col',{attrs:{\"span\":18}},[_c('el-form-item',{attrs:{\"label\":\"课程介绍\"}},[_c('div',{attrs:{\"id\":\"_editor\"}})])],1)],1)],2),_vm._v(\" \"),_c('div',{staticClass:\"add_course_footer\"},[_c('button',{on:{\"click\":function($event){return _vm.save('1','1')}}},[_vm._v(\"保存\")]),_vm._v(\" \"),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.courseDetails.status==='1'||_vm.$route.query.status==='1'),expression:\"courseDetails.status==='1'||$route.query.status==='1'\"}],on:{\"click\":function($event){return _vm.save('1','2')}}},[_vm._v(\"上架\")]),_vm._v(\" \"),_c('ec-button',{nativeOn:{\"click\":function($event){return _vm.cancel($event)}}},[_vm._v(\"取消\")])],1)],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-34b3e45e\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/views/course/addCourse.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-34b3e45e\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./addCourse.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./addCourse.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./addCourse.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-34b3e45e\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./addCourse.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/course/addCourse.vue\n// module id = null\n// module chunks = ","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.wangEditor = factory());\n}(this, (function () { 'use strict';\n\n/*\n    poly-fill\n*/\n\nvar polyfill = function () {\n\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target, varArgs) {\n            // .length of function is 2\n            if (target == null) {\n                // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource != null) {\n                    // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        };\n    }\n\n    // IE 中兼容 Element.prototype.matches\n    if (!Element.prototype.matches) {\n        Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n    }\n};\n\n/*\n    DOM 操作 API\n*/\n\n// 根据 html 代码片段创建 dom 对象\nfunction createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n}\n\n// 是否是 DOM List\nfunction isDOMList(selector) {\n    if (!selector) {\n        return false;\n    }\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n        return true;\n    }\n    return false;\n}\n\n// 封装 document.querySelectorAll\nfunction querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n    if (isDOMList(result)) {\n        return result;\n    } else {\n        return [result];\n    }\n}\n\n// 记录所有的事件绑定\nvar eventList = [];\n\n// 创建构造函数\nfunction DomElement(selector) {\n    if (!selector) {\n        return;\n    }\n\n    // selector 本来就是 DomElement 对象，直接返回\n    if (selector instanceof DomElement) {\n        return selector;\n    }\n\n    this.selector = selector;\n    var nodeType = selector.nodeType;\n\n    // 根据 selector 得出的结果（如 DOM，DOM List）\n    var selectorResult = [];\n    if (nodeType === 9) {\n        // document 节点\n        selectorResult = [selector];\n    } else if (nodeType === 1) {\n        // 单个 DOM 节点\n        selectorResult = [selector];\n    } else if (isDOMList(selector) || selector instanceof Array) {\n        // DOM List 或者数组\n        selectorResult = selector;\n    } else if (typeof selector === 'string') {\n        // 字符串\n        selector = selector.replace('/\\n/mg', '').trim();\n        if (selector.indexOf('<') === 0) {\n            // 如 <div>\n            selectorResult = createElemByHTML(selector);\n        } else {\n            // 如 #id .class\n            selectorResult = querySelectorAll(selector);\n        }\n    }\n\n    var length = selectorResult.length;\n    if (!length) {\n        // 空数组\n        return this;\n    }\n\n    // 加入 DOM 节点\n    var i = void 0;\n    for (i = 0; i < length; i++) {\n        this[i] = selectorResult[i];\n    }\n    this.length = length;\n}\n\n// 修改原型\nDomElement.prototype = {\n    constructor: DomElement,\n\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n        var i = void 0;\n        for (i = 0; i < this.length; i++) {\n            var elem = this[i];\n            var result = fn.call(elem, elem, i);\n            if (result === false) {\n                break;\n            }\n        }\n        return this;\n    },\n\n    // clone\n    clone: function clone(deep) {\n        var cloneList = [];\n        this.forEach(function (elem) {\n            cloneList.push(elem.cloneNode(!!deep));\n        });\n        return $(cloneList);\n    },\n\n    // 获取第几个元素\n    get: function get(index) {\n        var length = this.length;\n        if (index >= length) {\n            index = index % length;\n        }\n        return $(this[index]);\n    },\n\n    // 第一个\n    first: function first() {\n        return this.get(0);\n    },\n\n    // 最后一个\n    last: function last() {\n        var length = this.length;\n        return this.get(length - 1);\n    },\n\n    // 绑定事件\n    on: function on(type, selector, fn) {\n        // selector 不为空，证明绑定事件要加代理\n        if (!fn) {\n            fn = selector;\n            selector = null;\n        }\n\n        // type 是否有多个\n        var types = [];\n        types = type.split(/\\s+/);\n\n        return this.forEach(function (elem) {\n            types.forEach(function (type) {\n                if (!type) {\n                    return;\n                }\n\n                // 记录下，方便后面解绑\n                eventList.push({\n                    elem: elem,\n                    type: type,\n                    fn: fn\n                });\n\n                if (!selector) {\n                    // 无代理\n                    elem.addEventListener(type, fn);\n                    return;\n                }\n\n                // 有代理\n                elem.addEventListener(type, function (e) {\n                    var target = e.target;\n                    if (target.matches(selector)) {\n                        fn.call(target, e);\n                    }\n                });\n            });\n        });\n    },\n\n    // 取消事件绑定\n    off: function off(type, fn) {\n        return this.forEach(function (elem) {\n            elem.removeEventListener(type, fn);\n        });\n    },\n\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n        if (val == null) {\n            // 获取值\n            return this[0].getAttribute(key);\n        } else {\n            // 设置值\n            return this.forEach(function (elem) {\n                elem.setAttribute(key, val);\n            });\n        }\n    },\n\n    // 添加 class\n    addClass: function addClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    return !!item.trim();\n                });\n                // 添加 class\n                if (arr.indexOf(className) < 0) {\n                    arr.push(className);\n                }\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            } else {\n                elem.className = className;\n            }\n        });\n    },\n\n    // 删除 class\n    removeClass: function removeClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    item = item.trim();\n                    // 删除 class\n                    if (!item || item === className) {\n                        return false;\n                    }\n                    return true;\n                });\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            }\n        });\n    },\n\n    // 修改 css\n    css: function css(key, val) {\n        var currentStyle = key + ':' + val + ';';\n        return this.forEach(function (elem) {\n            var style = (elem.getAttribute('style') || '').trim();\n            var styleArr = void 0,\n                resultArr = [];\n            if (style) {\n                // 将 style 按照 ; 拆分为数组\n                styleArr = style.split(';');\n                styleArr.forEach(function (item) {\n                    // 对每项样式，按照 : 拆分为 key 和 value\n                    var arr = item.split(':').map(function (i) {\n                        return i.trim();\n                    });\n                    if (arr.length === 2) {\n                        resultArr.push(arr[0] + ':' + arr[1]);\n                    }\n                });\n                // 替换或者新增\n                resultArr = resultArr.map(function (item) {\n                    if (item.indexOf(key) === 0) {\n                        return currentStyle;\n                    } else {\n                        return item;\n                    }\n                });\n                if (resultArr.indexOf(currentStyle) < 0) {\n                    resultArr.push(currentStyle);\n                }\n                // 结果\n                elem.setAttribute('style', resultArr.join('; '));\n            } else {\n                // style 无值\n                elem.setAttribute('style', currentStyle);\n            }\n        });\n    },\n\n    // 显示\n    show: function show() {\n        return this.css('display', 'block');\n    },\n\n    // 隐藏\n    hide: function hide() {\n        return this.css('display', 'none');\n    },\n\n    // 获取子节点\n    children: function children() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.children);\n    },\n\n    // 获取子节点（包括文本节点）\n    childNodes: function childNodes() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.childNodes);\n    },\n\n    // 增加子节点\n    append: function append($children) {\n        return this.forEach(function (elem) {\n            $children.forEach(function (child) {\n                elem.appendChild(child);\n            });\n        });\n    },\n\n    // 移除当前节点\n    remove: function remove() {\n        return this.forEach(function (elem) {\n            if (elem.remove) {\n                elem.remove();\n            } else {\n                var parent = elem.parentElement;\n                parent && parent.removeChild(elem);\n            }\n        });\n    },\n\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n        var elem = this[0];\n        var child = $child[0];\n        return elem.contains(child);\n    },\n\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n        var elem = this[0];\n        return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n        var elem = this[0];\n        return elem.nodeName;\n    },\n\n    // 从当前元素查找\n    find: function find(selector) {\n        var elem = this[0];\n        return $(elem.querySelectorAll(selector));\n    },\n\n    // 获取当前元素的 text\n    text: function text(val) {\n        if (!val) {\n            // 获取 text\n            var elem = this[0];\n            return elem.innerHTML.replace(/<.*?>/g, function () {\n                return '';\n            });\n        } else {\n            // 设置 text\n            return this.forEach(function (elem) {\n                elem.innerHTML = val;\n            });\n        }\n    },\n\n    // 获取 html\n    html: function html(value) {\n        var elem = this[0];\n        if (value == null) {\n            return elem.innerHTML;\n        } else {\n            elem.innerHTML = value;\n            return this;\n        }\n    },\n\n    // 获取 value\n    val: function val() {\n        var elem = this[0];\n        return elem.value.trim();\n    },\n\n    // focus\n    focus: function focus() {\n        return this.forEach(function (elem) {\n            elem.focus();\n        });\n    },\n\n    // parent\n    parent: function parent() {\n        var elem = this[0];\n        return $(elem.parentElement);\n    },\n\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n        var results = document.querySelectorAll(selector);\n        var length = results.length;\n        if (!length) {\n            // 传入的 selector 无效\n            return null;\n        }\n\n        var elem = _currentElem || this[0];\n        if (elem.nodeName === 'BODY') {\n            return null;\n        }\n\n        var parent = elem.parentElement;\n        var i = void 0;\n        for (i = 0; i < length; i++) {\n            if (parent === results[i]) {\n                // 找到，并返回\n                return $(parent);\n            }\n        }\n\n        // 继续查找\n        return this.parentUntil(selector, parent);\n    },\n\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n        if ($elem.nodeType === 1) {\n            return this[0] === $elem;\n        } else {\n            return this[0] === $elem[0];\n        }\n    },\n\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            parent.insertBefore(elem, referenceNode);\n        });\n    },\n\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            if (parent.lastChild === referenceNode) {\n                // 最后一个元素\n                parent.appendChild(elem);\n            } else {\n                // 不是最后一个元素\n                parent.insertBefore(elem, referenceNode.nextSibling);\n            }\n        });\n    }\n};\n\n// new 一个对象\nfunction $(selector) {\n    return new DomElement(selector);\n}\n\n// 解绑所有事件，用于销毁编辑器\n$.offAll = function () {\n    eventList.forEach(function (item) {\n        var elem = item.elem;\n        var type = item.type;\n        var fn = item.fn;\n        // 解绑\n        elem.removeEventListener(type, fn);\n    });\n};\n\n/*\n    配置信息\n*/\n\nvar config = {\n\n    // 默认菜单配置\n    menus: ['head', 'bold', 'fontSize', 'fontName', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n\n    fontNames: ['宋体', '微软雅黑', 'Arial', 'Tahoma', 'Verdana'],\n\n    colors: ['#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'],\n\n    // // 语言配置\n    // lang: {\n    //     '设置标题': 'title',\n    //     '正文': 'p',\n    //     '链接文字': 'link text',\n    //     '链接': 'link',\n    //     '插入': 'insert',\n    //     '创建': 'init'\n    // },\n\n    // 表情\n    emotions: [{\n        // tab 的标题\n        title: '默认',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            alt: '[坏笑]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/50/pcmoren_huaixiao_org.png'\n        }, {\n            alt: '[舔屏]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/pcmoren_tian_org.png'\n        }, {\n            alt: '[污]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/pcmoren_wu_org.png'\n        }]\n    }, {\n        // tab 的标题\n        title: '新浪',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif',\n            alt: '[草泥马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/60/horse2_thumb.gif',\n            alt: '[神马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/fuyun_thumb.gif',\n            alt: '[浮云]'\n        }]\n    }, {\n        // tab 的标题\n        title: 'emoji',\n        // type -> 'emoji' / 'image'\n        type: 'emoji',\n        // content -> 数组\n        content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\n    }],\n\n    // 编辑区域的 z-index\n    zIndex: 10000,\n\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n\n    // 插入链接时候的格式校验\n    linkCheck: function linkCheck(text, link) {\n        // text 是插入的文字\n        // link 是插入的链接\n        return true; // 返回 true 即表示成功\n        // return '校验失败' // 返回字符串即表示失败的提示信息\n    },\n\n    // 插入网络图片的校验\n    linkImgCheck: function linkImgCheck(src) {\n        // src 即图片的地址\n        return true; // 返回 true 即表示成功\n        // return '校验失败'  // 返回字符串即表示失败的提示信息\n    },\n\n    // 粘贴过滤样式，默认开启\n    pasteFilterStyle: true,\n\n    // 粘贴内容时，忽略图片。默认关闭\n    pasteIgnoreImg: false,\n\n    // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。\n    // IE 暂时不支持\n    pasteTextHandle: function pasteTextHandle(content) {\n        // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n        return content;\n    },\n\n    // onchange 事件\n    // onchange: function (html) {\n    //     // html 即变化之后的内容\n    //     console.log(html)\n    // },\n\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n\n    // 插入网络图片的回调\n    linkImgCallback: function linkImgCallback(url) {\n        // console.log(url)  // url 即插入图片的地址\n    },\n\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n\n    // 配置一次最多上传几个图片\n    // uploadImgMaxLength: 5,\n\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: false,\n\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: '/upload',\n\n    // 自定义配置 filename\n    uploadFileName: '',\n\n    // 上传图片的自定义参数\n    uploadImgParams: {\n        // token: 'abcdef12345'\n    },\n\n    // 上传图片的自定义header\n    uploadImgHeaders: {\n        // 'Accept': 'text/x-json'\n    },\n\n    // 配置 XHR withCredentials\n    withCredentials: false,\n\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 10000,\n\n    // 上传图片 hook \n    uploadImgHooks: {\n        // customInsert: function (insertLinkImg, result, editor) {\n        //     console.log('customInsert')\n        //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n        //     const data = result.data1 || []\n        //     data.forEach(link => {\n        //         insertLinkImg(link)\n        //     })\n        // },\n        before: function before(xhr, editor, files) {\n            // 图片上传之前触发\n\n            // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n            // return {\n            //     prevent: true,\n            //     msg: '放弃上传'\n            // }\n        },\n        success: function success(xhr, editor, result) {\n            // 图片上传并返回结果，图片插入成功之后触发\n        },\n        fail: function fail(xhr, editor, result) {\n            // 图片上传并返回结果，但图片插入错误时触发\n        },\n        error: function error(xhr, editor) {\n            // 图片上传出错时触发\n        },\n        timeout: function timeout(xhr, editor) {\n            // 图片上传超时时触发\n        }\n    },\n\n    // 是否上传七牛云，默认为 false\n    qiniu: false\n\n};\n\n/*\n    工具\n*/\n\n// 和 UA 相关的属性\nvar UA = {\n    _ua: navigator.userAgent,\n\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n        var reg = /webkit/i;\n        return reg.test(this._ua);\n    },\n\n    // 是否 IE\n    isIE: function isIE() {\n        return 'ActiveXObject' in window;\n    }\n};\n\n// 遍历对象\nfunction objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result = fn.call(obj, key, obj[key]);\n            if (result === false) {\n                break;\n            }\n        }\n    }\n}\n\n// 遍历类数组\nfunction arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n    for (i = 0; i < length; i++) {\n        item = fakeArr[i];\n        result = fn.call(fakeArr, item, i);\n        if (result === false) {\n            break;\n        }\n    }\n}\n\n// 获取随机数\nfunction getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n}\n\n// 替换 html 特殊字符\nfunction replaceHtmlSymbol(html) {\n    if (html == null) {\n        return '';\n    }\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;').replace(/(\\r\\n|\\r|\\n)/g, '<br/>');\n}\n\n// 返回百分比的格式\n\n\n// 判断是不是 function\nfunction isFunction(fn) {\n    return typeof fn === 'function';\n}\n\n/*\n    bold-menu\n*/\n// 构造函数\nfunction Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nBold.prototype = {\n    constructor: Bold,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 bold 命令\n        editor.cmd.do('bold');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('bold')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    替换多语言\n */\n\nvar replaceLang = function (editor, str) {\n    var langArgs = editor.config.langArgs || [];\n    var result = str;\n\n    langArgs.forEach(function (item) {\n        var reg = item.reg;\n        var val = item.val;\n\n        if (reg.test(result)) {\n            result = result.replace(reg, function () {\n                return val;\n            });\n        }\n    });\n\n    return result;\n};\n\n/*\n    droplist\n*/\nvar _emptyFn = function _emptyFn() {};\n\n// 构造函数\nfunction DropList(menu, opt) {\n    var _this = this;\n\n    // droplist 所依附的菜单\n    var editor = menu.editor;\n    this.menu = menu;\n    this.opt = opt;\n    // 容器\n    var $container = $('<div class=\"w-e-droplist\"></div>');\n\n    // 标题\n    var $title = opt.$title;\n    var titleHtml = void 0;\n    if ($title) {\n        // 替换多语言\n        titleHtml = $title.html();\n        titleHtml = replaceLang(editor, titleHtml);\n        $title.html(titleHtml);\n\n        $title.addClass('w-e-dp-title');\n        $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n    var onClick = opt.onClick || _emptyFn;\n\n    // 加入 DOM 并绑定事件\n    var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n        var $elem = item.$elem;\n\n        // 替换多语言\n        var elemHtml = $elem.html();\n        elemHtml = replaceLang(editor, elemHtml);\n        $elem.html(elemHtml);\n\n        var value = item.value;\n        var $li = $('<li class=\"w-e-item\"></li>');\n        if ($elem) {\n            $li.append($elem);\n            $list.append($li);\n            $li.on('click', function (e) {\n                onClick(value);\n\n                // 隐藏\n                _this.hideTimeoutId = setTimeout(function () {\n                    _this.hide();\n                }, 0);\n            });\n        }\n    });\n\n    // 绑定隐藏事件\n    $container.on('mouseleave', function (e) {\n        _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n        }, 0);\n    });\n\n    // 记录属性\n    this.$container = $container;\n\n    // 基本属性\n    this._rendered = false;\n    this._show = false;\n}\n\n// 原型\nDropList.prototype = {\n    constructor: DropList,\n\n    // 显示（插入DOM）\n    show: function show() {\n        if (this.hideTimeoutId) {\n            // 清除之前的定时隐藏\n            clearTimeout(this.hideTimeoutId);\n        }\n\n        var menu = this.menu;\n        var $menuELem = menu.$elem;\n        var $container = this.$container;\n        if (this._show) {\n            return;\n        }\n        if (this._rendered) {\n            // 显示\n            $container.show();\n        } else {\n            // 加入 DOM 之前先定位位置\n            var menuHeight = $menuELem.getSizeData().height || 0;\n            var width = this.opt.width || 100; // 默认为 100\n            $container.css('margin-top', menuHeight + 'px').css('width', width + 'px');\n\n            // 加入到 DOM\n            $menuELem.append($container);\n            this._rendered = true;\n        }\n\n        // 修改属性\n        this._show = true;\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        if (this.showTimeoutId) {\n            // 清除之前的定时显示\n            clearTimeout(this.showTimeoutId);\n        }\n\n        var $container = this.$container;\n        if (!this._show) {\n            return;\n        }\n        // 隐藏并需改属性\n        $container.hide();\n        this._show = false;\n    }\n};\n\n/*\n    menu - header\n*/\n// 构造函数\nfunction Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>设置标题</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<h1>H1</h1>'), value: '<h1>' }, { $elem: $('<h2>H2</h2>'), value: '<h2>' }, { $elem: $('<h3>H3</h3>'), value: '<h3>' }, { $elem: $('<h4>H4</h4>'), value: '<h4>' }, { $elem: $('<h5>H5</h5>'), value: '<h5>' }, { $elem: $('<p>正文</p>'), value: '<p>' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 Head 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nHead.prototype = {\n    constructor: Head,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if (editor.$textElem.equal($selectionElem)) {\n            // 不能选中多行来设置标题，否则会出现问题\n            // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\n            return;\n        }\n\n        editor.cmd.do('formatBlock', value);\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^h/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - fontSize\n*/\n\n// 构造函数\nfunction FontSize(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-text-heigh\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 160,\n        $title: $('<p>字号</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span style=\"font-size: x-small;\">x-small</span>'), value: '1' }, { $elem: $('<span style=\"font-size: small;\">small</span>'), value: '2' }, { $elem: $('<span>normal</span>'), value: '3' }, { $elem: $('<span style=\"font-size: large;\">large</span>'), value: '4' }, { $elem: $('<span style=\"font-size: x-large;\">x-large</span>'), value: '5' }, { $elem: $('<span style=\"font-size: xx-large;\">xx-large</span>'), value: '6' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontSize 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontSize.prototype = {\n    constructor: FontSize,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontSize', value);\n    }\n};\n\n/*\n    menu - fontName\n*/\n\n// 构造函数\nfunction FontName(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-font\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 获取配置的字体\n    var config = editor.config;\n    var fontNames = config.fontNames || [];\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>字体</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: fontNames.map(function (fontName) {\n            return { $elem: $('<span style=\"font-family: ' + fontName + ';\">' + fontName + '</span>'), value: fontName };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontName 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontName.prototype = {\n    constructor: FontName,\n\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontName', value);\n    }\n};\n\n/*\n    panel\n*/\n\nvar emptyFn = function emptyFn() {};\n\n// 记录已经显示 panel 的菜单\nvar _isCreatedPanelMenus = [];\n\n// 构造函数\nfunction Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n}\n\n// 原型\nPanel.prototype = {\n    constructor: Panel,\n\n    // 显示（插入DOM）\n    show: function show() {\n        var _this = this;\n\n        var menu = this.menu;\n        if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n            // 该菜单已经创建了 panel 不能再创建\n            return;\n        }\n\n        var editor = menu.editor;\n        var $body = $('body');\n        var $textContainerElem = editor.$textContainerElem;\n        var opt = this.opt;\n\n        // panel 的容器\n        var $container = $('<div class=\"w-e-panel-container\"></div>');\n        var width = opt.width || 300; // 默认 300px\n        $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px');\n\n        // 添加关闭按钮\n        var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n        $container.append($closeBtn);\n        $closeBtn.on('click', function () {\n            _this.hide();\n        });\n\n        // 准备 tabs 容器\n        var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n        var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n        $container.append($tabTitleContainer).append($tabContentContainer);\n\n        // 设置高度\n        var height = opt.height;\n        if (height) {\n            $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n        }\n\n        // tabs\n        var tabs = opt.tabs || [];\n        var tabTitleArr = [];\n        var tabContentArr = [];\n        tabs.forEach(function (tab, tabIndex) {\n            if (!tab) {\n                return;\n            }\n            var title = tab.title || '';\n            var tpl = tab.tpl || '';\n\n            // 替换多语言\n            title = replaceLang(editor, title);\n            tpl = replaceLang(editor, tpl);\n\n            // 添加到 DOM\n            var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n            $tabTitleContainer.append($title);\n            var $content = $(tpl);\n            $tabContentContainer.append($content);\n\n            // 记录到内存\n            $title._index = tabIndex;\n            tabTitleArr.push($title);\n            tabContentArr.push($content);\n\n            // 设置 active 项\n            if (tabIndex === 0) {\n                $title._active = true;\n                $title.addClass('w-e-active');\n            } else {\n                $content.hide();\n            }\n\n            // 绑定 tab 的事件\n            $title.on('click', function (e) {\n                if ($title._active) {\n                    return;\n                }\n                // 隐藏所有的 tab\n                tabTitleArr.forEach(function ($title) {\n                    $title._active = false;\n                    $title.removeClass('w-e-active');\n                });\n                tabContentArr.forEach(function ($content) {\n                    $content.hide();\n                });\n\n                // 显示当前的 tab\n                $title._active = true;\n                $title.addClass('w-e-active');\n                $content.show();\n            });\n        });\n\n        // 绑定关闭事件\n        $container.on('click', function (e) {\n            // 点击时阻止冒泡\n            e.stopPropagation();\n        });\n        $body.on('click', function (e) {\n            _this.hide();\n        });\n\n        // 添加到 DOM\n        $textContainerElem.append($container);\n\n        // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n        tabs.forEach(function (tab, index) {\n            if (!tab) {\n                return;\n            }\n            var events = tab.events || [];\n            events.forEach(function (event) {\n                var selector = event.selector;\n                var type = event.type;\n                var fn = event.fn || emptyFn;\n                var $content = tabContentArr[index];\n                $content.find(selector).on(type, function (e) {\n                    e.stopPropagation();\n                    var needToHide = fn(e);\n                    // 执行完事件之后，是否要关闭 panel\n                    if (needToHide) {\n                        _this.hide();\n                    }\n                });\n            });\n        });\n\n        // focus 第一个 elem\n        var $inputs = $container.find('input[type=text],textarea');\n        if ($inputs.length) {\n            $inputs.get(0).focus();\n        }\n\n        // 添加到属性\n        this.$container = $container;\n\n        // 隐藏其他 panel\n        this._hideOtherPanels();\n        // 记录该 menu 已经创建了 panel\n        _isCreatedPanelMenus.push(menu);\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        var menu = this.menu;\n        var $container = this.$container;\n        if ($container) {\n            $container.remove();\n        }\n\n        // 将该 menu 记录中移除\n        _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n            if (item === menu) {\n                return false;\n            } else {\n                return true;\n            }\n        });\n    },\n\n    // 一个 panel 展示时，隐藏其他 panel\n    _hideOtherPanels: function _hideOtherPanels() {\n        if (!_isCreatedPanelMenus.length) {\n            return;\n        }\n        _isCreatedPanelMenus.forEach(function (menu) {\n            var panel = menu.panel || {};\n            if (panel.hide) {\n                panel.hide();\n            }\n        });\n    }\n};\n\n/*\n    menu - link\n*/\n// 构造函数\nfunction Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nLink.prototype = {\n    constructor: Link,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $linkelem = void 0;\n\n        if (this._active) {\n            // 当前选区在链接里面\n            $linkelem = editor.selection.getSelectionContainerElem();\n            if (!$linkelem) {\n                return;\n            }\n            // 将该元素都包含在选取之内，以便后面整体替换\n            editor.selection.createRangeByElem($linkelem);\n            editor.selection.restoreSelection();\n            // 显示 panel\n            this._createPanel($linkelem.text(), $linkelem.attr('href'));\n        } else {\n            // 当前选区不在链接里面\n            if (editor.selection.isSelectionEmpty()) {\n                // 选区是空的，未选中内容\n                this._createPanel('', '');\n            } else {\n                // 选中内容了\n                this._createPanel(editor.selection.getSelectionText(), '');\n            }\n        }\n    },\n\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n        var _this = this;\n\n        // panel 中需要用到的id\n        var inputLinkId = getRandom('input-link');\n        var inputTextId = getRandom('input-text');\n        var btnOkId = getRandom('btn-ok');\n        var btnDelId = getRandom('btn-del');\n\n        // 是否显示“删除链接”\n        var delBtnDisplay = this._active ? 'inline-block' : 'none';\n\n        // 初始化并显示 panel\n        var panel = new Panel(this, {\n            width: 300,\n            // panel 中可包含多个 tab\n            tabs: [{\n                // tab 的标题\n                title: '链接',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u94FE\\u63A5\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + '\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkId);\n                        var $text = $('#' + inputTextId);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLink(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                },\n                // 删除链接\n                {\n                    selector: '#' + btnDelId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行删除链接\n                        _this._delLink();\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // tab end\n            ] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 删除当前链接\n    _delLink: function _delLink() {\n        if (!this._active) {\n            return;\n        }\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var selectionText = editor.selection.getSelectionText();\n        editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n        var editor = this.editor;\n        var config = editor.config;\n        var linkCheck = config.linkCheck;\n        var checkResult = true; // 默认为 true\n        if (linkCheck && typeof linkCheck === 'function') {\n            checkResult = linkCheck(text, link);\n        }\n        if (checkResult === true) {\n            editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n        } else {\n            alert(checkResult);\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        if ($selectionELem.getNodeName() === 'A') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    italic-menu\n*/\n// 构造函数\nfunction Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nItalic.prototype = {\n    constructor: Italic,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 italic 命令\n        editor.cmd.do('italic');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('italic')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    redo-menu\n*/\n// 构造函数\nfunction Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nRedo.prototype = {\n    constructor: Redo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 redo 命令\n        editor.cmd.do('redo');\n    }\n};\n\n/*\n    strikeThrough-menu\n*/\n// 构造函数\nfunction StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nStrikeThrough.prototype = {\n    constructor: StrikeThrough,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 strikeThrough 命令\n        editor.cmd.do('strikeThrough');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('strikeThrough')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    underline-menu\n*/\n// 构造函数\nfunction Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUnderline.prototype = {\n    constructor: Underline,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 underline 命令\n        editor.cmd.do('underline');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('underline')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    undo-menu\n*/\n// 构造函数\nfunction Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUndo.prototype = {\n    constructor: Undo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 undo 命令\n        editor.cmd.do('undo');\n    }\n};\n\n/*\n    menu - list\n*/\n// 构造函数\nfunction List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>设置列表</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'), value: 'insertOrderedList' }, { $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'), value: 'insertUnorderedList' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nList.prototype = {\n    constructor: List,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        editor.selection.restoreSelection();\n        if (editor.cmd.queryCommandState(value)) {\n            return;\n        }\n        editor.cmd.do(value);\n\n        // 验证列表是否被包裹在 <p> 之内\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if ($selectionElem.getNodeName() === 'LI') {\n            $selectionElem = $selectionElem.parent();\n        }\n        if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n            return;\n        }\n        if ($selectionElem.equal($textElem)) {\n            // 证明是顶级标签，没有被 <p> 包裹\n            return;\n        }\n        var $parent = $selectionElem.parent();\n        if ($parent.equal($textElem)) {\n            // $parent 是顶级标签，不能删除\n            return;\n        }\n\n        $selectionElem.insertAfter($parent);\n        $parent.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - justify\n*/\n// 构造函数\nfunction Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>对齐方式</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'), value: 'justifyLeft' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'), value: 'justifyCenter' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'), value: 'justifyRight' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nJustify.prototype = {\n    constructor: Justify,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do(value);\n    }\n};\n\n/*\n    menu - Forecolor\n*/\n// 构造函数\nfunction ForeColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>文字颜色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-pencil2\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 ForeColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nForeColor.prototype = {\n    constructor: ForeColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('foreColor', value);\n    }\n};\n\n/*\n    menu - BackColor\n*/\n// 构造函数\nfunction BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>背景色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-paint-brush\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 BackColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nBackColor.prototype = {\n    constructor: BackColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('backColor', value);\n    }\n};\n\n/*\n    menu - quote\n*/\n// 构造函数\nfunction Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nQuote.prototype = {\n    constructor: Quote,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        var nodeName = $selectionElem.getNodeName();\n\n        if (!UA.isIE()) {\n            if (nodeName === 'BLOCKQUOTE') {\n                // 撤销 quote\n                editor.cmd.do('formatBlock', '<P>');\n            } else {\n                // 转换为 quote\n                editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n            }\n            return;\n        }\n\n        // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\n        var content = void 0,\n            $targetELem = void 0;\n        if (nodeName === 'P') {\n            // 将 P 转换为 quote\n            content = $selectionElem.text();\n            $targetELem = $('<blockquote>' + content + '</blockquote>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n            return;\n        }\n        if (nodeName === 'BLOCKQUOTE') {\n            // 撤销 quote\n            content = $selectionElem.text();\n            $targetELem = $('<p>' + content + '</p>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n        }\n    },\n\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^BLOCKQUOTE$/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - code\n*/\n// 构造函数\nfunction Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nCode.prototype = {\n    constructor: Code,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $startElem = editor.selection.getSelectionStartElem();\n        var $endElem = editor.selection.getSelectionEndElem();\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n        var selectionText = editor.selection.getSelectionText();\n        var $code = void 0;\n\n        if (!$startElem.equal($endElem)) {\n            // 跨元素选择，不做处理\n            editor.selection.restoreSelection();\n            return;\n        }\n        if (!isSeleEmpty) {\n            // 选取不是空，用 <code> 包裹即可\n            $code = $('<code>' + selectionText + '</code>');\n            editor.cmd.do('insertElem', $code);\n            editor.selection.createRangeByElem($code, false);\n            editor.selection.restoreSelection();\n            return;\n        }\n\n        // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n        if (this._active) {\n            // 选中状态，将编辑内容\n            this._createPanel($startElem.html());\n        } else {\n            // 未选中状态，将创建内容\n            this._createPanel();\n        }\n    },\n\n    _createPanel: function _createPanel(value) {\n        var _this = this;\n\n        // value - 要编辑的内容\n        value = value || '';\n        var type = !value ? 'new' : 'edit';\n        var textId = getRandom('texxt');\n        var btnId = getRandom('btn');\n\n        var panel = new Panel(this, {\n            width: 500,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入代码',\n                // 模板\n                tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>',\n                // 事件绑定\n                events: [\n                // 插入代码\n                {\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textId);\n                        var text = $text.val() || $text.html();\n                        text = replaceHtmlSymbol(text);\n                        if (type === 'new') {\n                            // 新插入\n                            _this._insertCode(text);\n                        } else {\n                            // 编辑更新\n                            _this._updateCode(text);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // new Panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n    },\n\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        $selectionELem.html(value);\n        editor.selection.restoreSelection();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $parentElem = $selectionELem.parent();\n        if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - emoticon\n*/\n// 构造函数\nfunction Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nEmoticon.prototype = {\n    constructor: Emoticon,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config;\n        // 获取表情配置\n        var emotions = config.emotions || [];\n\n        // 创建表情 dropPanel 的配置\n        var tabConfig = [];\n        emotions.forEach(function (emotData) {\n            var emotType = emotData.type;\n            var content = emotData.content || [];\n\n            // 这一组表情最终拼接出来的 html\n            var faceHtml = '';\n\n            // emoji 表情\n            if (emotType === 'emoji') {\n                content.forEach(function (item) {\n                    if (item) {\n                        faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n                    }\n                });\n            }\n            // 图片表情\n            if (emotType === 'image') {\n                content.forEach(function (item) {\n                    var src = item.src;\n                    var alt = item.alt;\n                    if (src) {\n                        // 加一个 data-w-e 属性，点击图片的时候不再提示编辑图片\n                        faceHtml += '<span class=\"w-e-item\"><img src=\"' + src + '\" alt=\"' + alt + '\" data-w-e=\"1\"/></span>';\n                    }\n                });\n            }\n\n            tabConfig.push({\n                title: emotData.title,\n                tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        var $target = $(target);\n                        var nodeName = $target.getNodeName();\n\n                        var insertHtml = void 0;\n                        if (nodeName === 'IMG') {\n                            // 插入图片\n                            insertHtml = $target.parent().html();\n                        } else {\n                            // 插入 emoji\n                            insertHtml = '<span>' + $target.html() + '</span>';\n                        }\n\n                        _this._insert(insertHtml);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            });\n        });\n\n        var panel = new Panel(this, {\n            width: 300,\n            height: 200,\n            // 一个 Panel 包含多个 tab\n            tabs: tabConfig\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表情\n    _insert: function _insert(emotHtml) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', emotHtml);\n    }\n};\n\n/*\n    menu - table\n*/\n// 构造函数\nfunction Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nTable.prototype = {\n    constructor: Table,\n\n    onClick: function onClick() {\n        if (this._active) {\n            // 编辑现有表格\n            this._createEditPanel();\n        } else {\n            // 插入新表格\n            this._createInsertPanel();\n        }\n    },\n\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n        var _this = this;\n\n        // 用到的 id\n        var btnInsertId = getRandom('btn');\n        var textRowNum = getRandom('row');\n        var textColNum = getRandom('col');\n\n        var panel = new Panel(this, {\n            width: 250,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入表格',\n                // 模板\n                tpl: '<div>\\n                        <p style=\"text-align:left; padding:5px 0;\">\\n                            \\u521B\\u5EFA\\n                            <input id=\"' + textRowNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u884C\\n                            <input id=\"' + textColNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnInsertId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 点击按钮，插入表格\n                    selector: '#' + btnInsertId,\n                    type: 'click',\n                    fn: function fn() {\n                        var rowNum = parseInt($('#' + textRowNum).val());\n                        var colNum = parseInt($('#' + textColNum).val());\n\n                        if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                            // form 数据有效\n                            _this._insert(rowNum, colNum);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 展示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n        // 拼接 table 模板\n        var r = void 0,\n            c = void 0;\n        var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n        for (r = 0; r < rowNum; r++) {\n            html += '<tr>';\n            if (r === 0) {\n                for (c = 0; c < colNum; c++) {\n                    html += '<th>&nbsp;</th>';\n                }\n            } else {\n                for (c = 0; c < colNum; c++) {\n                    html += '<td>&nbsp;</td>';\n                }\n            }\n            html += '</tr>';\n        }\n        html += '</table><p><br></p>';\n\n        // 执行命令\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', html);\n\n        // 防止 firefox 下出现 resize 的控制点\n        editor.cmd.do('enableObjectResizing', false);\n        editor.cmd.do('enableInlineTableEditing', false);\n    },\n\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n        var _this2 = this;\n\n        // 可用的 id\n        var addRowBtnId = getRandom('add-row');\n        var addColBtnId = getRandom('add-col');\n        var delRowBtnId = getRandom('del-row');\n        var delColBtnId = getRandom('del-col');\n        var delTableBtnId = getRandom('del-table');\n\n        // 创建 panel 对象\n        var panel = new Panel(this, {\n            width: 320,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '编辑表格',\n                // 模板\n                tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + '\" class=\"left\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\"' + delRowBtnId + '\" class=\"red left\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\"' + addColBtnId + '\" class=\"left\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\"' + delColBtnId + '\" class=\"red left\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + delTableBtnId + '\" class=\"gray left\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 增加行\n                    selector: '#' + addRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 增加列\n                    selector: '#' + addColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除行\n                    selector: '#' + delRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除列\n                    selector: '#' + delColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除表格\n                    selector: '#' + delTableBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delTable();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }]\n        });\n        // 显示 panel\n        panel.show();\n    },\n\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n        var result = {};\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName !== 'TD' && nodeName !== 'TH') {\n            return;\n        }\n\n        // 获取 td index\n        var $tr = $selectionELem.parent();\n        var $tds = $tr.children();\n        var tdLength = $tds.length;\n        $tds.forEach(function (td, index) {\n            if (td === $selectionELem[0]) {\n                // 记录并跳出循环\n                result.td = {\n                    index: index,\n                    elem: td,\n                    length: tdLength\n                };\n                return false;\n            }\n        });\n\n        // 获取 tr index\n        var $tbody = $tr.parent();\n        var $trs = $tbody.children();\n        var trLength = $trs.length;\n        $trs.forEach(function (tr, index) {\n            if (tr === $tr[0]) {\n                // 记录并跳出循环\n                result.tr = {\n                    index: index,\n                    elem: tr,\n                    length: trLength\n                };\n                return false;\n            }\n        });\n\n        // 返回结果\n        return result;\n    },\n\n    // 增加行\n    _addRow: function _addRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        var tdData = locationData.td;\n        var tdLength = tdData.length;\n\n        // 拼接即将插入的字符串\n        var newTr = document.createElement('tr');\n        var tpl = '',\n            i = void 0;\n        for (i = 0; i < tdLength; i++) {\n            tpl += '<td>&nbsp;</td>';\n        }\n        newTr.innerHTML = tpl;\n        // 插入\n        $(newTr).insertAfter($currentTr);\n    },\n\n    // 增加列\n    _addCol: function _addCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            var name = $currentTd.getNodeName().toLowerCase();\n\n            // new 一个 td，并插入\n            var newTd = document.createElement(name);\n            $(newTd).insertAfter($currentTd);\n        });\n    },\n\n    // 删除行\n    _delRow: function _delRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        $currentTr.remove();\n    },\n\n    // 删除列\n    _delCol: function _delCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            // 删除\n            $currentTd.remove();\n        });\n    },\n\n    // 删除表格\n    _delTable: function _delTable() {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $table = $selectionELem.parentUntil('table');\n        if (!$table) {\n            return;\n        }\n        $table.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName === 'TD' || nodeName === 'TH') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - video\n*/\n// 构造函数\nfunction Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nVideo.prototype = {\n    constructor: Video,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 创建 id\n        var textValId = getRandom('text-val');\n        var btnId = getRandom('btn');\n\n        // 创建 panel\n        var panel = new Panel(this, {\n            width: 350,\n            // 一个 panel 多个 tab\n            tabs: [{\n                // 标题\n                title: '插入视频',\n                // 模板\n                tpl: '<div>\\n                        <input id=\"' + textValId + '\" type=\"text\" class=\"block\" placeholder=\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\"/>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textValId);\n                        var val = $text.val().trim();\n\n                        // 测试用视频地址\n                        // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n                        if (val) {\n                            // 插入视频\n                            _this._insert(val);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入视频\n    _insert: function _insert(val) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', val + '<p><br></p>');\n    }\n};\n\n/*\n    menu - img\n*/\n// 构造函数\nfunction Image(editor) {\n    this.editor = editor;\n    var imgMenuId = getRandom('w-e-img');\n    this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"w-e-icon-image\"></i></div>');\n    editor.imgMenuId = imgMenuId;\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nImage.prototype = {\n    constructor: Image,\n\n    onClick: function onClick() {\n        var editor = this.editor;\n        var config = editor.config;\n        if (config.qiniu) {\n            return;\n        }\n        if (this._active) {\n            this._createEditPanel();\n        } else {\n            this._createInsertPanel();\n        }\n    },\n\n    _createEditPanel: function _createEditPanel() {\n        var editor = this.editor;\n\n        // id\n        var width30 = getRandom('width-30');\n        var width50 = getRandom('width-50');\n        var width100 = getRandom('width-100');\n        var delBtn = getRandom('del-btn');\n\n        // tab 配置\n        var tabsConfig = [{\n            title: '编辑图片',\n            tpl: '<div>\\n                    <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                        <span style=\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\"' + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + '\" class=\"gray left\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>',\n            events: [{\n                selector: '#' + width30,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '30%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width50,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '50%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width100,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '100%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + delBtn,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.remove();\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }]\n        }];\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfig\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    _createInsertPanel: function _createInsertPanel() {\n        var editor = this.editor;\n        var uploadImg = editor.uploadImg;\n        var config = editor.config;\n\n        // id\n        var upTriggerId = getRandom('up-trigger');\n        var upFileId = getRandom('up-file');\n        var linkUrlId = getRandom('link-url');\n        var linkBtnId = getRandom('link-btn');\n\n        // tabs 的配置\n        var tabsConfig = [{\n            title: '上传图片',\n            tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n            events: [{\n                // 触发选择图片\n                selector: '#' + upTriggerId,\n                type: 'click',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (fileElem) {\n                        fileElem.click();\n                    } else {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n                }\n            }, {\n                // 选择图片完毕\n                selector: '#' + upFileId,\n                type: 'change',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (!fileElem) {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n\n                    // 获取选中的 file 对象列表\n                    var fileList = fileElem.files;\n                    if (fileList.length) {\n                        uploadImg.uploadImg(fileList);\n                    }\n\n                    // 返回 true 可关闭 panel\n                    return true;\n                }\n            }]\n        }, // first tab end\n        {\n            title: '网络图片',\n            tpl: '<div>\\n                    <input id=\"' + linkUrlId + '\" type=\"text\" class=\"block\" placeholder=\"\\u56FE\\u7247\\u94FE\\u63A5\"/></td>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + linkBtnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>',\n            events: [{\n                selector: '#' + linkBtnId,\n                type: 'click',\n                fn: function fn() {\n                    var $linkUrl = $('#' + linkUrlId);\n                    var url = $linkUrl.val().trim();\n\n                    if (url) {\n                        uploadImg.insertLinkImg(url);\n                    }\n\n                    // 返回 true 表示函数执行结束之后关闭 panel\n                    return true;\n                }\n            }]\n        } // second tab end\n        ]; // tabs end\n\n        // 判断 tabs 的显示\n        var tabsConfigResult = [];\n        if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n            // 显示“上传图片”\n            tabsConfigResult.push(tabsConfig[0]);\n        }\n        if (config.showLinkImg) {\n            // 显示“网络图片”\n            tabsConfigResult.push(tabsConfig[1]);\n        }\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfigResult\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor._selectedImg) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    所有菜单的汇总\n*/\n\n// 存储菜单的构造函数\nvar MenuConstructors = {};\n\nMenuConstructors.bold = Bold;\n\nMenuConstructors.head = Head;\n\nMenuConstructors.fontSize = FontSize;\n\nMenuConstructors.fontName = FontName;\n\nMenuConstructors.link = Link;\n\nMenuConstructors.italic = Italic;\n\nMenuConstructors.redo = Redo;\n\nMenuConstructors.strikeThrough = StrikeThrough;\n\nMenuConstructors.underline = Underline;\n\nMenuConstructors.undo = Undo;\n\nMenuConstructors.list = List;\n\nMenuConstructors.justify = Justify;\n\nMenuConstructors.foreColor = ForeColor;\n\nMenuConstructors.backColor = BackColor;\n\nMenuConstructors.quote = Quote;\n\nMenuConstructors.code = Code;\n\nMenuConstructors.emoticon = Emoticon;\n\nMenuConstructors.table = Table;\n\nMenuConstructors.video = Video;\n\nMenuConstructors.image = Image;\n\n/*\n    菜单集合\n*/\n// 构造函数\nfunction Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n}\n\n// 修改原型\nMenus.prototype = {\n    constructor: Menus,\n\n    // 初始化菜单\n    init: function init() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config || {};\n        var configMenus = config.menus || []; // 获取配置中的菜单\n\n        // 根据配置信息，创建菜单\n        configMenus.forEach(function (menuKey) {\n            var MenuConstructor = MenuConstructors[menuKey];\n            if (MenuConstructor && typeof MenuConstructor === 'function') {\n                // 创建单个菜单\n                _this.menus[menuKey] = new MenuConstructor(editor);\n            }\n        });\n\n        // 添加到菜单栏\n        this._addToToolbar();\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n        var editor = this.editor;\n        var $toolbarElem = editor.$toolbarElem;\n        var menus = this.menus;\n        var config = editor.config;\n        // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n        var zIndex = config.zIndex + 1;\n        objForEach(menus, function (key, menu) {\n            var $elem = menu.$elem;\n            if ($elem) {\n                // 设置 z-index\n                $elem.css('z-index', zIndex);\n                $toolbarElem.append($elem);\n            }\n        });\n    },\n\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n        var menus = this.menus;\n        var editor = this.editor;\n        objForEach(menus, function (key, menu) {\n            var type = menu.type;\n            if (!type) {\n                return;\n            }\n            var $elem = menu.$elem;\n            var droplist = menu.droplist;\n            var panel = menu.panel;\n\n            // 点击类型，例如 bold\n            if (type === 'click' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    menu.onClick(e);\n                });\n            }\n\n            // 下拉框，例如 head\n            if (type === 'droplist' && droplist) {\n                $elem.on('mouseenter', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 显示\n                    droplist.showTimeoutId = setTimeout(function () {\n                        droplist.show();\n                    }, 200);\n                }).on('mouseleave', function (e) {\n                    // 隐藏\n                    droplist.hideTimeoutId = setTimeout(function () {\n                        droplist.hide();\n                    }, 0);\n                });\n            }\n\n            // 弹框类型，例如 link\n            if (type === 'panel' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    e.stopPropagation();\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 在自定义事件中显示 panel\n                    menu.onClick(e);\n                });\n            }\n        });\n    },\n\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n        var menus = this.menus;\n        objForEach(menus, function (key, menu) {\n            if (menu.tryChangeActive) {\n                setTimeout(function () {\n                    menu.tryChangeActive();\n                }, 100);\n            }\n        });\n    }\n};\n\n/*\n    粘贴信息的处理\n*/\n\n// 获取粘贴的纯文本\nfunction getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n}\n\n// 获取粘贴的html\nfunction getPasteHtml(e, filterStyle, ignoreImg) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n        pasteHtml = clipboardData.getData('text/html');\n    }\n    if (!pasteHtml && pasteText) {\n        pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n    if (!pasteHtml) {\n        return;\n    }\n\n    // 过滤word中状态过来的无用字符\n    var docSplitHtml = pasteHtml.split('</html>');\n    if (docSplitHtml.length === 2) {\n        pasteHtml = docSplitHtml[0];\n    }\n\n    // 过滤无用标签\n    pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, '');\n    // 去掉注释\n    pasteHtml = pasteHtml.replace(/<!--.*?-->/mg, '');\n    // 过滤 data-xxx 属性\n    pasteHtml = pasteHtml.replace(/\\s?data-.+?=('|\").+?('|\")/igm, '');\n\n    if (ignoreImg) {\n        // 忽略图片\n        pasteHtml = pasteHtml.replace(/<img.+?>/igm, '');\n    }\n\n    if (filterStyle) {\n        // 过滤样式\n        pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").*?('|\")/igm, '');\n    } else {\n        // 保留样式\n        pasteHtml = pasteHtml.replace(/\\s?class=('|\").*?('|\")/igm, '');\n    }\n\n    return pasteHtml;\n}\n\n// 获取粘贴的图片文件\nfunction getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n    if (txt) {\n        // 有文字，就忽略图片\n        return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n    if (!items) {\n        return result;\n    }\n\n    objForEach(items, function (key, value) {\n        var type = value.type;\n        if (/image/i.test(type)) {\n            result.push(value.getAsFile());\n        }\n    });\n\n    return result;\n}\n\n/*\n    编辑区域\n*/\n\n// 获取一个 elem.childNodes 的 JSON 数据\nfunction getChildrenJSON($elem) {\n    var result = [];\n    var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点\n    $children.forEach(function (curElem) {\n        var elemResult = void 0;\n        var nodeType = curElem.nodeType;\n\n        // 文本节点\n        if (nodeType === 3) {\n            elemResult = curElem.textContent;\n            elemResult = replaceHtmlSymbol(elemResult);\n        }\n\n        // 普通 DOM 节点\n        if (nodeType === 1) {\n            elemResult = {};\n\n            // tag\n            elemResult.tag = curElem.nodeName.toLowerCase();\n            // attr\n            var attrData = [];\n            var attrList = curElem.attributes || {};\n            var attrListLength = attrList.length || 0;\n            for (var i = 0; i < attrListLength; i++) {\n                var attr = attrList[i];\n                attrData.push({\n                    name: attr.name,\n                    value: attr.value\n                });\n            }\n            elemResult.attrs = attrData;\n            // children（递归）\n            elemResult.children = getChildrenJSON($(curElem));\n        }\n\n        result.push(elemResult);\n    });\n    return result;\n}\n\n// 构造函数\nfunction Text(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nText.prototype = {\n    constructor: Text,\n\n    // 初始化\n    init: function init() {\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 清空内容\n    clear: function clear() {\n        this.html('<p><br></p>');\n    },\n\n    // 获取 设置 html\n    html: function html(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var html = void 0;\n        if (val == null) {\n            html = $textElem.html();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            html = html.replace(/\\u200b/gm, '');\n            return html;\n        } else {\n            $textElem.html(val);\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 获取 JSON\n    getJSON: function getJSON() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        return getChildrenJSON($textElem);\n    },\n\n    // 获取 设置 text\n    text: function text(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var text = void 0;\n        if (val == null) {\n            text = $textElem.text();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            text = text.replace(/\\u200b/gm, '');\n            return text;\n        } else {\n            $textElem.text('<p>' + val + '</p>');\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 追加内容\n    append: function append(html) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        $textElem.append($(html));\n\n        // 初始化选取，将光标定位到内容尾部\n        editor.initSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // 实时保存选取\n        this._saveRangeRealTime();\n\n        // 按回车建时的特殊处理\n        this._enterKeyHandle();\n\n        // 清空时保留 <p><br></p>\n        this._clearHandle();\n\n        // 粘贴事件（粘贴文字，粘贴图片）\n        this._pasteHandle();\n\n        // tab 特殊处理\n        this._tabHandle();\n\n        // img 点击\n        this._imgHandle();\n\n        // 拖拽事件\n        this._dragHandle();\n    },\n\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 保存当前的选区\n        function saveRange(e) {\n            // 随时保存选区\n            editor.selection.saveRange();\n            // 更新按钮 ative 状态\n            editor.menus.changeActive();\n        }\n        // 按键后保存\n        $textElem.on('keyup', saveRange);\n        $textElem.on('mousedown', function (e) {\n            // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n            $textElem.on('mouseleave', saveRange);\n        });\n        $textElem.on('mouseup', function (e) {\n            saveRange();\n            // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n            $textElem.off('mouseleave', saveRange);\n        });\n    },\n\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        function insertEmptyP($selectionElem) {\n            var $p = $('<p><br></p>');\n            $p.insertBefore($selectionElem);\n            editor.selection.createRangeByElem($p, true);\n            editor.selection.restoreSelection();\n            $selectionElem.remove();\n        }\n\n        // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n        function pHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var $parentElem = $selectionElem.parent();\n\n            if ($parentElem.html() === '<code><br></code>') {\n                // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>\n                // 而且继续回车跳不出去，因此只能特殊处理\n                insertEmptyP($selectionElem);\n                return;\n            }\n\n            if (!$parentElem.equal($textElem)) {\n                // 不是顶级标签\n                return;\n            }\n\n            var nodeName = $selectionElem.getNodeName();\n            if (nodeName === 'P') {\n                // 当前的标签是 P ，不用做处理\n                return;\n            }\n\n            if ($selectionElem.text()) {\n                // 有内容，不做处理\n                return;\n            }\n\n            // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n            insertEmptyP($selectionElem);\n        }\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                return;\n            }\n            // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n            pHandle(e);\n        });\n\n        // <pre><code></code></pre> 回车时 特殊处理\n        function codeHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n                // 不符合要求 忽略\n                return;\n            }\n\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n\n            // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\n            if (editor._willBreakCode === true) {\n                // 此时可以跳出代码块\n                // 插入 <p> ，并将选取定位到 <p>\n                var $p = $('<p><br></p>');\n                $p.insertAfter($parentElem);\n                editor.selection.createRangeByElem($p, true);\n                editor.selection.restoreSelection();\n\n                // 修改状态\n                editor._willBreakCode = false;\n\n                e.preventDefault();\n                return;\n            }\n\n            var _startOffset = editor.selection.getRange().startOffset;\n\n            // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\n            editor.cmd.do('insertHTML', '\\n');\n            editor.selection.saveRange();\n            if (editor.selection.getRange().startOffset === _startOffset) {\n                // 没起作用，再来一遍\n                editor.cmd.do('insertHTML', '\\n');\n            }\n\n            var codeLength = $selectionElem.html().length;\n            if (editor.selection.getRange().startOffset + 1 === codeLength) {\n                // 说明光标在代码最后的位置，执行了回车操作\n                // 记录下来，以便下次回车时候跳出 code\n                editor._willBreakCode = true;\n            }\n\n            // 阻止默认行为\n            e.preventDefault();\n        }\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                // 取消即将跳转代码块的记录\n                editor._willBreakCode = false;\n                return;\n            }\n            // <pre><code></code></pre> 回车时 特殊处理\n            codeHandle(e);\n        });\n    },\n\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var txtHtml = $textElem.html().toLowerCase().trim();\n            if (txtHtml === '<p><br></p>') {\n                // 最后剩下一个空行，就不再删除了\n                e.preventDefault();\n                return;\n            }\n        });\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var $p = void 0;\n            var txtHtml = $textElem.html().toLowerCase().trim();\n\n            // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n            if (!txtHtml || txtHtml === '<br>') {\n                // 内容空了\n                $p = $('<p><br/></p>');\n                $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n                $textElem.append($p);\n                editor.selection.createRangeByElem($p, false, true);\n                editor.selection.restoreSelection();\n            }\n        });\n    },\n\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n        var editor = this.editor;\n        var config = editor.config;\n        var pasteFilterStyle = config.pasteFilterStyle;\n        var pasteTextHandle = config.pasteTextHandle;\n        var ignoreImg = config.pasteIgnoreImg;\n        var $textElem = editor.$textElem;\n\n        // 粘贴图片、文本的事件，每次只能执行一个\n        // 判断该次粘贴事件是否可以执行\n        var pasteTime = 0;\n        function canDo() {\n            var now = Date.now();\n            var flag = false;\n            if (now - pasteTime >= 100) {\n                // 间隔大于 100 ms ，可以执行\n                flag = true;\n            }\n            pasteTime = now;\n            return flag;\n        }\n        function resetTime() {\n            pasteTime = 0;\n        }\n\n        // 粘贴文字\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                // 阻止默认行为，使用 execCommand 的粘贴命令\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的文字\n            var pasteHtml = getPasteHtml(e, pasteFilterStyle, ignoreImg);\n            var pasteText = getPasteText(e);\n            pasteText = pasteText.replace(/\\n/gm, '<br>');\n\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中只能粘贴纯文本\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n                return;\n            }\n\n            // 先放开注释，有问题再追查 ————\n            // // 表格中忽略，可能会出现异常问题\n            // if (nodeName === 'TD' || nodeName === 'TH') {\n            //     return\n            // }\n\n            if (!pasteHtml) {\n                // 没有内容，可继续执行下面的图片粘贴\n                resetTime();\n                return;\n            }\n            try {\n                // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n                // 因此执行 insertHTML 会报错\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteHtml = '' + (pasteTextHandle(pasteHtml) || '');\n                }\n                editor.cmd.do('insertHTML', pasteHtml);\n            } catch (ex) {\n                // 此时使用 pasteText 来兼容一下\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n            }\n        });\n\n        // 粘贴图片\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的图片\n            var pasteFiles = getPasteImgs(e);\n            if (!pasteFiles || !pasteFiles.length) {\n                return;\n            }\n\n            // 获取当前的元素\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中粘贴忽略\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(pasteFiles);\n        });\n    },\n\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 9) {\n                return;\n            }\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n                // <pre><code> 里面\n                editor.cmd.do('insertHTML', '    ');\n            } else {\n                // 普通文字\n                editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n            }\n\n            e.preventDefault();\n        });\n    },\n\n    // img 点击\n    _imgHandle: function _imgHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 为图片增加 selected 样式\n        $textElem.on('click', 'img', function (e) {\n            var img = this;\n            var $img = $(img);\n\n            if ($img.attr('data-w-e') === '1') {\n                // 是表情图片，忽略\n                return;\n            }\n\n            // 记录当前点击过的图片\n            editor._selectedImg = $img;\n\n            // 修改选区并 restore ，防止用户此时点击退格键，会删除其他内容\n            editor.selection.createRangeByElem($img);\n            editor.selection.restoreSelection();\n        });\n\n        // 去掉图片的 selected 样式\n        $textElem.on('click  keyup', function (e) {\n            if (e.target.matches('img')) {\n                // 点击的是图片，忽略\n                return;\n            }\n            // 删除记录\n            editor._selectedImg = null;\n        });\n    },\n\n    // 拖拽事件\n    _dragHandle: function _dragHandle() {\n        var editor = this.editor;\n\n        // 禁用 document 拖拽事件\n        var $document = $(document);\n        $document.on('dragleave drop dragenter dragover', function (e) {\n            e.preventDefault();\n        });\n\n        // 添加编辑区域拖拽事件\n        var $textElem = editor.$textElem;\n        $textElem.on('drop', function (e) {\n            e.preventDefault();\n            var files = e.dataTransfer && e.dataTransfer.files;\n            if (!files || !files.length) {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(files);\n        });\n    }\n};\n\n/*\n    命令，封装 document.execCommand\n*/\n\n// 构造函数\nfunction Command(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nCommand.prototype = {\n    constructor: Command,\n\n    // 执行命令\n    do: function _do(name, value) {\n        var editor = this.editor;\n\n        // 使用 styleWithCSS\n        if (!editor._useStyleWithCSS) {\n            document.execCommand('styleWithCSS', null, true);\n            editor._useStyleWithCSS = true;\n        }\n\n        // 如果无选区，忽略\n        if (!editor.selection.getRange()) {\n            return;\n        }\n\n        // 恢复选取\n        editor.selection.restoreSelection();\n\n        // 执行\n        var _name = '_' + name;\n        if (this[_name]) {\n            // 有自定义事件\n            this[_name](value);\n        } else {\n            // 默认 command\n            this._execCommand(name, value);\n        }\n\n        // 修改菜单状态\n        editor.menus.changeActive();\n\n        // 最后，恢复选取保证光标在原来的位置闪烁\n        editor.selection.saveRange();\n        editor.selection.restoreSelection();\n\n        // 触发 onchange\n        editor.change && editor.change();\n    },\n\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (this.queryCommandSupported('insertHTML')) {\n            // W3C\n            this._execCommand('insertHTML', html);\n        } else if (range.insertNode) {\n            // IE\n            range.deleteContents();\n            range.insertNode($(html)[0]);\n        } else if (range.pasteHTML) {\n            // IE <= 10\n            range.pasteHTML(html);\n        }\n    },\n\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (range.insertNode) {\n            range.deleteContents();\n            range.insertNode($elem[0]);\n        }\n    },\n\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n        document.execCommand(name, false, value);\n    },\n\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n        return document.queryCommandValue(name);\n    },\n\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n        return document.queryCommandState(name);\n    },\n\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n        return document.queryCommandSupported(name);\n    }\n};\n\n/*\n    selection range API\n*/\n\n// 构造函数\nfunction API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n}\n\n// 修改原型\nAPI.prototype = {\n    constructor: API,\n\n    // 获取 range 对象\n    getRange: function getRange() {\n        return this._currentRange;\n    },\n\n    // 保存选区\n    saveRange: function saveRange(_range) {\n        if (_range) {\n            // 保存已有选区\n            this._currentRange = _range;\n            return;\n        }\n\n        // 获取当前的选区\n        var selection = window.getSelection();\n        if (selection.rangeCount === 0) {\n            return;\n        }\n        var range = selection.getRangeAt(0);\n\n        // 判断选区内容是否在编辑内容之内\n        var $containerElem = this.getSelectionContainerElem(range);\n        if (!$containerElem) {\n            return;\n        }\n\n        // 判断选区内容是否在不可编辑区域之内\n        if ($containerElem.attr('contenteditable') === 'false' || $containerElem.parentUntil('[contenteditable=false]')) {\n            return;\n        }\n\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if ($textElem.isContain($containerElem)) {\n            // 是编辑内容之内的\n            this._currentRange = range;\n        }\n    },\n\n    // 折叠选区\n    collapseRange: function collapseRange(toStart) {\n        if (toStart == null) {\n            // 默认为 false\n            toStart = false;\n        }\n        var range = this._currentRange;\n        if (range) {\n            range.collapse(toStart);\n        }\n    },\n\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n        var range = this._currentRange;\n        if (range) {\n            return this._currentRange.toString();\n        } else {\n            return '';\n        }\n    },\n\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.commonAncestorContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.startContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.endContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n\n    // 选区是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n        var range = this._currentRange;\n        if (range && range.startContainer) {\n            if (range.startContainer === range.endContainer) {\n                if (range.startOffset === range.endOffset) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(this._currentRange);\n    },\n\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n        var editor = this.editor;\n        var range = this.getRange();\n        var $elem = void 0;\n\n        if (!range) {\n            // 当前无 range\n            return;\n        }\n        if (!this.isSelectionEmpty()) {\n            // 当前选区必须没有内容才可以\n            return;\n        }\n\n        try {\n            // 目前只支持 webkit 内核\n            if (UA.isWebkit()) {\n                // 插入 &#8203\n                editor.cmd.do('insertHTML', '&#8203;');\n                // 修改 offset 位置\n                range.setEnd(range.endContainer, range.endOffset + 1);\n                // 存储\n                this.saveRange(range);\n            } else {\n                $elem = $('<strong>&#8203;</strong>');\n                editor.cmd.do('insertElem', $elem);\n                this.createRangeByElem($elem, true);\n            }\n        } catch (ex) {\n            // 部分情况下会报错，兼容一下\n        }\n    },\n\n    // 根据 $Elem 设置选区\n    createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n        // $elem - 经过封装的 elem\n        // toStart - true 开始位置，false 结束位置\n        // isContent - 是否选中Elem的内容\n        if (!$elem.length) {\n            return;\n        }\n\n        var elem = $elem[0];\n        var range = document.createRange();\n\n        if (isContent) {\n            range.selectNodeContents(elem);\n        } else {\n            range.selectNode(elem);\n        }\n\n        if (typeof toStart === 'boolean') {\n            range.collapse(toStart);\n        }\n\n        // 存储 range\n        this.saveRange(range);\n    }\n};\n\n/*\n    上传进度条\n*/\n\nfunction Progress(editor) {\n    this.editor = editor;\n    this._time = 0;\n    this._isShow = false;\n    this._isRender = false;\n    this._timeoutId = 0;\n    this.$textContainer = editor.$textContainerElem;\n    this.$bar = $('<div class=\"w-e-progress\"></div>');\n}\n\nProgress.prototype = {\n    constructor: Progress,\n\n    show: function show(progress) {\n        var _this = this;\n\n        // 状态处理\n        if (this._isShow) {\n            return;\n        }\n        this._isShow = true;\n\n        // 渲染\n        var $bar = this.$bar;\n        if (!this._isRender) {\n            var $textContainer = this.$textContainer;\n            $textContainer.append($bar);\n        } else {\n            this._isRender = true;\n        }\n\n        // 改变进度（节流，100ms 渲染一次）\n        if (Date.now() - this._time > 100) {\n            if (progress <= 1) {\n                $bar.css('width', progress * 100 + '%');\n                this._time = Date.now();\n            }\n        }\n\n        // 隐藏\n        var timeoutId = this._timeoutId;\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(function () {\n            _this._hide();\n        }, 500);\n    },\n\n    _hide: function _hide() {\n        var $bar = this.$bar;\n        $bar.remove();\n\n        // 修改状态\n        this._time = 0;\n        this._isShow = false;\n        this._isRender = false;\n    }\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n/*\n    上传图片\n*/\n\n// 构造函数\nfunction UploadImg(editor) {\n    this.editor = editor;\n}\n\n// 原型\nUploadImg.prototype = {\n    constructor: UploadImg,\n\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n        var editor = this.editor;\n        var debug = editor.config.debug;\n        var customAlert = editor.config.customAlert;\n\n        if (debug) {\n            throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n        } else {\n            if (customAlert && typeof customAlert === 'function') {\n                customAlert(alertInfo);\n            } else {\n                alert(alertInfo);\n            }\n        }\n    },\n\n    // 根据链接插入图片\n    insertLinkImg: function insertLinkImg(link) {\n        var _this2 = this;\n\n        if (!link) {\n            return;\n        }\n        var editor = this.editor;\n        var config = editor.config;\n\n        // 校验格式\n        var linkImgCheck = config.linkImgCheck;\n        var checkResult = void 0;\n        if (linkImgCheck && typeof linkImgCheck === 'function') {\n            checkResult = linkImgCheck(link);\n            if (typeof checkResult === 'string') {\n                // 校验失败，提示信息\n                alert(checkResult);\n                return;\n            }\n        }\n\n        editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>');\n\n        // 验证图片 url 是否有效，无效的话给出提示\n        var img = document.createElement('img');\n        img.onload = function () {\n            var callback = config.linkImgCallback;\n            if (callback && typeof callback === 'function') {\n                callback(link);\n            }\n\n            img = null;\n        };\n        img.onerror = function () {\n            img = null;\n            // 无法成功下载图片\n            _this2._alert('插入图片错误', 'wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \"' + link + '\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25');\n            return;\n        };\n        img.onabort = function () {\n            img = null;\n        };\n        img.src = link;\n    },\n\n    // 上传图片\n    uploadImg: function uploadImg(files) {\n        var _this3 = this;\n\n        if (!files || !files.length) {\n            return;\n        }\n\n        // ------------------------------ 获取配置信息 ------------------------------\n        var editor = this.editor;\n        var config = editor.config;\n        var uploadImgServer = config.uploadImgServer;\n        var uploadImgShowBase64 = config.uploadImgShowBase64;\n\n        var maxSize = config.uploadImgMaxSize;\n        var maxSizeM = maxSize / 1024 / 1024;\n        var maxLength = config.uploadImgMaxLength || 10000;\n        var uploadFileName = config.uploadFileName || '';\n        var uploadImgParams = config.uploadImgParams || {};\n        var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl;\n        var uploadImgHeaders = config.uploadImgHeaders || {};\n        var hooks = config.uploadImgHooks || {};\n        var timeout = config.uploadImgTimeout || 3000;\n        var withCredentials = config.withCredentials;\n        if (withCredentials == null) {\n            withCredentials = false;\n        }\n        var customUploadImg = config.customUploadImg;\n\n        if (!customUploadImg) {\n            // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传\n            if (!uploadImgServer && !uploadImgShowBase64) {\n                return;\n            }\n        }\n\n        // ------------------------------ 验证文件信息 ------------------------------\n        var resultFiles = [];\n        var errInfo = [];\n        arrForEach(files, function (file) {\n            var name = file.name;\n            var size = file.size;\n\n            // chrome 低版本 name === undefined\n            if (!name || !size) {\n                return;\n            }\n\n            if (/\\.(jpg|jpeg|png|bmp|gif|webp)$/i.test(name) === false) {\n                // 后缀名不合法，不是图片\n                errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662F\\u56FE\\u7247');\n                return;\n            }\n            if (maxSize < size) {\n                // 上传图片过大\n                errInfo.push('\\u3010' + name + '\\u3011\\u5927\\u4E8E ' + maxSizeM + 'M');\n                return;\n            }\n\n            // 验证通过的加入结果列表\n            resultFiles.push(file);\n        });\n        // 抛出验证信息\n        if (errInfo.length) {\n            this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n            return;\n        }\n        if (resultFiles.length > maxLength) {\n            this._alert('一次最多上传' + maxLength + '张图片');\n            return;\n        }\n\n        // ------------------------------ 自定义上传 ------------------------------\n        if (customUploadImg && typeof customUploadImg === 'function') {\n            customUploadImg(resultFiles, this.insertLinkImg.bind(this));\n\n            // 阻止以下代码执行\n            return;\n        }\n\n        // 添加图片数据\n        var formdata = new FormData();\n        arrForEach(resultFiles, function (file) {\n            var name = uploadFileName || file.name;\n            formdata.append(name, file);\n        });\n\n        // ------------------------------ 上传图片 ------------------------------\n        if (uploadImgServer && typeof uploadImgServer === 'string') {\n            // 添加参数\n            var uploadImgServerArr = uploadImgServer.split('#');\n            uploadImgServer = uploadImgServerArr[0];\n            var uploadImgServerHash = uploadImgServerArr[1] || '';\n            objForEach(uploadImgParams, function (key, val) {\n                // 因使用者反应，自定义参数不能默认 encode ，由 v3.1.1 版本开始注释掉\n                // val = encodeURIComponent(val)\n\n                // 第一，将参数拼接到 url 中\n                if (uploadImgParamsWithUrl) {\n                    if (uploadImgServer.indexOf('?') > 0) {\n                        uploadImgServer += '&';\n                    } else {\n                        uploadImgServer += '?';\n                    }\n                    uploadImgServer = uploadImgServer + key + '=' + val;\n                }\n\n                // 第二，将参数添加到 formdata 中\n                formdata.append(key, val);\n            });\n            if (uploadImgServerHash) {\n                uploadImgServer += '#' + uploadImgServerHash;\n            }\n\n            // 定义 xhr\n            var xhr = new XMLHttpRequest();\n            xhr.open('POST', uploadImgServer);\n\n            // 设置超时\n            xhr.timeout = timeout;\n            xhr.ontimeout = function () {\n                // hook - timeout\n                if (hooks.timeout && typeof hooks.timeout === 'function') {\n                    hooks.timeout(xhr, editor);\n                }\n\n                _this3._alert('上传图片超时');\n            };\n\n            // 监控 progress\n            if (xhr.upload) {\n                xhr.upload.onprogress = function (e) {\n                    var percent = void 0;\n                    // 进度条\n                    var progressBar = new Progress(editor);\n                    if (e.lengthComputable) {\n                        percent = e.loaded / e.total;\n                        progressBar.show(percent);\n                    }\n                };\n            }\n\n            // 返回数据\n            xhr.onreadystatechange = function () {\n                var result = void 0;\n                if (xhr.readyState === 4) {\n                    if (xhr.status < 200 || xhr.status >= 300) {\n                        // hook - error\n                        if (hooks.error && typeof hooks.error === 'function') {\n                            hooks.error(xhr, editor);\n                        }\n\n                        // xhr 返回状态错误\n                        _this3._alert('上传图片发生错误', '\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F ' + xhr.status);\n                        return;\n                    }\n\n                    result = xhr.responseText;\n                    if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n                        try {\n                            result = JSON.parse(result);\n                        } catch (ex) {\n                            // hook - fail\n                            if (hooks.fail && typeof hooks.fail === 'function') {\n                                hooks.fail(xhr, editor, result);\n                            }\n\n                            _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n                            return;\n                        }\n                    }\n                    if (!hooks.customInsert && result.errno != '0') {\n                        // hook - fail\n                        if (hooks.fail && typeof hooks.fail === 'function') {\n                            hooks.fail(xhr, editor, result);\n                        }\n\n                        // 数据错误\n                        _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n                    } else {\n                        if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                            // 使用者自定义插入方法\n                            hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n                        } else {\n                            // 将图片插入编辑器\n                            var data = result.data || [];\n                            data.forEach(function (link) {\n                                _this3.insertLinkImg(link);\n                            });\n                        }\n\n                        // hook - success\n                        if (hooks.success && typeof hooks.success === 'function') {\n                            hooks.success(xhr, editor, result);\n                        }\n                    }\n                }\n            };\n\n            // hook - before\n            if (hooks.before && typeof hooks.before === 'function') {\n                var beforeResult = hooks.before(xhr, editor, resultFiles);\n                if (beforeResult && (typeof beforeResult === 'undefined' ? 'undefined' : _typeof(beforeResult)) === 'object') {\n                    if (beforeResult.prevent) {\n                        // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n                        this._alert(beforeResult.msg);\n                        return;\n                    }\n                }\n            }\n\n            // 自定义 headers\n            objForEach(uploadImgHeaders, function (key, val) {\n                xhr.setRequestHeader(key, val);\n            });\n\n            // 跨域传 cookie\n            xhr.withCredentials = withCredentials;\n\n            // 发送请求\n            xhr.send(formdata);\n\n            // 注意，要 return 。不去操作接下来的 base64 显示方式\n            return;\n        }\n\n        // ------------------------------ 显示 base64 格式 ------------------------------\n        if (uploadImgShowBase64) {\n            arrForEach(files, function (file) {\n                var _this = _this3;\n                var reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = function () {\n                    _this.insertLinkImg(this.result);\n                };\n            });\n        }\n    }\n};\n\n/*\n    编辑器构造函数\n*/\n\n// id，累加\nvar editorId = 1;\n\n// 构造函数\nfunction Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n        // 没有传入任何参数，报错\n        throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    }\n    // id，用以区分单个页面不同的编辑器对象\n    this.id = 'wangEditor-' + editorId++;\n\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector;\n\n    // 自定义配置\n    this.customConfig = {};\n}\n\n// 修改原型\nEditor.prototype = {\n    constructor: Editor,\n\n    // 初始化配置\n    _initConfig: function _initConfig() {\n        // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n        var target = {};\n        this.config = Object.assign(target, config, this.customConfig);\n\n        // 将语言配置，生成正则表达式\n        var langConfig = this.config.lang || {};\n        var langArgs = [];\n        objForEach(langConfig, function (key, val) {\n            // key 即需要生成正则表达式的规则，如“插入链接”\n            // val 即需要被替换成的语言，如“insert link”\n            langArgs.push({\n                reg: new RegExp(key, 'img'),\n                val: val\n\n            });\n        });\n        this.config.langArgs = langArgs;\n    },\n\n    // 初始化 DOM\n    _initDom: function _initDom() {\n        var _this = this;\n\n        var toolbarSelector = this.toolbarSelector;\n        var $toolbarSelector = $(toolbarSelector);\n        var textSelector = this.textSelector;\n\n        var config$$1 = this.config;\n        var zIndex = config$$1.zIndex;\n\n        // 定义变量\n        var $toolbarElem = void 0,\n            $textContainerElem = void 0,\n            $textElem = void 0,\n            $children = void 0;\n\n        if (textSelector == null) {\n            // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n            $toolbarElem = $('<div></div>');\n            $textContainerElem = $('<div></div>');\n\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $toolbarSelector.children();\n\n            // 添加到 DOM 结构中\n            $toolbarSelector.append($toolbarElem).append($textContainerElem);\n\n            // 自行创建的，需要配置默认的样式\n            $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n            $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n        } else {\n            // toolbar 和 text 的选择器都有值，记录属性\n            $toolbarElem = $toolbarSelector;\n            $textContainerElem = $(textSelector);\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $textContainerElem.children();\n        }\n\n        // 编辑区域\n        $textElem = $('<div></div>');\n        $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%');\n\n        // 初始化编辑区域内容\n        if ($children && $children.length) {\n            $textElem.append($children);\n        } else {\n            $textElem.append($('<p><br></p>'));\n        }\n\n        // 编辑区域加入DOM\n        $textContainerElem.append($textElem);\n\n        // 设置通用的 class\n        $toolbarElem.addClass('w-e-toolbar');\n        $textContainerElem.addClass('w-e-text-container');\n        $textContainerElem.css('z-index', zIndex);\n        $textElem.addClass('w-e-text');\n\n        // 添加 ID\n        var toolbarElemId = getRandom('toolbar-elem');\n        $toolbarElem.attr('id', toolbarElemId);\n        var textElemId = getRandom('text-elem');\n        $textElem.attr('id', textElemId);\n\n        // 记录属性\n        this.$toolbarElem = $toolbarElem;\n        this.$textContainerElem = $textContainerElem;\n        this.$textElem = $textElem;\n        this.toolbarElemId = toolbarElemId;\n        this.textElemId = textElemId;\n\n        // 记录输入法的开始和结束\n        var compositionEnd = true;\n        $textContainerElem.on('compositionstart', function () {\n            // 输入法开始输入\n            compositionEnd = false;\n        });\n        $textContainerElem.on('compositionend', function () {\n            // 输入法结束输入\n            compositionEnd = true;\n        });\n\n        // 绑定 onchange\n        $textContainerElem.on('click keyup', function () {\n            // 输入法结束才出发 onchange\n            compositionEnd && _this.change && _this.change();\n        });\n        $toolbarElem.on('click', function () {\n            this.change && this.change();\n        });\n\n        //绑定 onfocus 与 onblur 事件\n        if (config$$1.onfocus || config$$1.onblur) {\n            // 当前编辑器是否是焦点状态\n            this.isFocus = false;\n\n            $(document).on('click', function (e) {\n                //判断当前点击元素是否在编辑器内\n                var isChild = $textElem.isContain($(e.target));\n\n                //判断当前点击元素是否为工具栏\n                var isToolbar = $toolbarElem.isContain($(e.target));\n                var isMenu = $toolbarElem[0] == e.target ? true : false;\n\n                if (!isChild) {\n                    //若为选择工具栏中的功能，则不视为成blur操作\n                    if (isToolbar && !isMenu) {\n                        return;\n                    }\n\n                    if (_this.isFocus) {\n                        _this.onblur && _this.onblur();\n                    }\n                    _this.isFocus = false;\n                } else {\n                    if (!_this.isFocus) {\n                        _this.onfocus && _this.onfocus();\n                    }\n                    _this.isFocus = true;\n                }\n            });\n        }\n    },\n\n    // 封装 command\n    _initCommand: function _initCommand() {\n        this.cmd = new Command(this);\n    },\n\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n        this.selection = new API(this);\n    },\n\n    // 添加图片上传\n    _initUploadImg: function _initUploadImg() {\n        this.uploadImg = new UploadImg(this);\n    },\n\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n        this.menus = new Menus(this);\n        this.menus.init();\n    },\n\n    // 添加 text 区域\n    _initText: function _initText() {\n        this.txt = new Text(this);\n        this.txt.init();\n    },\n\n    // 初始化选区，将光标定位到内容尾部\n    initSelection: function initSelection(newLine) {\n        var $textElem = this.$textElem;\n        var $children = $textElem.children();\n        if (!$children.length) {\n            // 如果编辑器区域无内容，添加一个空行，重新设置选区\n            $textElem.append($('<p><br></p>'));\n            this.initSelection();\n            return;\n        }\n\n        var $last = $children.last();\n\n        if (newLine) {\n            // 新增一个空行\n            var html = $last.html().toLowerCase();\n            var nodeName = $last.getNodeName();\n            if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n                // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n                $textElem.append($('<p><br></p>'));\n                this.initSelection();\n                return;\n            }\n        }\n\n        this.selection.createRangeByElem($last, false, true);\n        this.selection.restoreSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // -------- 绑定 onchange 事件 --------\n        var onChangeTimeoutId = 0;\n        var beforeChangeHtml = this.txt.html();\n        var config$$1 = this.config;\n\n        // onchange 触发延迟时间\n        var onchangeTimeout = config$$1.onchangeTimeout;\n        onchangeTimeout = parseInt(onchangeTimeout, 10);\n        if (!onchangeTimeout || onchangeTimeout <= 0) {\n            onchangeTimeout = 200;\n        }\n\n        var onchange = config$$1.onchange;\n        if (onchange && typeof onchange === 'function') {\n            // 触发 change 的有三个场景：\n            // 1. $textContainerElem.on('click keyup')\n            // 2. $toolbarElem.on('click')\n            // 3. editor.cmd.do()\n            this.change = function () {\n                // 判断是否有变化\n                var currentHtml = this.txt.html();\n\n                if (currentHtml.length === beforeChangeHtml.length) {\n                    // 需要比较每一个字符\n                    if (currentHtml === beforeChangeHtml) {\n                        return;\n                    }\n                }\n\n                // 执行，使用节流\n                if (onChangeTimeoutId) {\n                    clearTimeout(onChangeTimeoutId);\n                }\n                onChangeTimeoutId = setTimeout(function () {\n                    // 触发配置的 onchange 函数\n                    onchange(currentHtml);\n                    beforeChangeHtml = currentHtml;\n                }, onchangeTimeout);\n            };\n        }\n\n        // -------- 绑定 onblur 事件 --------\n        var onblur = config$$1.onblur;\n        if (onblur && typeof onblur === 'function') {\n            this.onblur = function () {\n                var currentHtml = this.txt.html();\n                onblur(currentHtml);\n            };\n        }\n\n        // -------- 绑定 onfocus 事件 --------\n        var onfocus = config$$1.onfocus;\n        if (onfocus && typeof onfocus === 'function') {\n            this.onfocus = function () {\n                onfocus();\n            };\n        }\n    },\n\n    // 创建编辑器\n    create: function create() {\n        // 初始化配置信息\n        this._initConfig();\n\n        // 初始化 DOM\n        this._initDom();\n\n        // 封装 command API\n        this._initCommand();\n\n        // 封装 selection range API\n        this._initSelectionAPI();\n\n        // 添加 text\n        this._initText();\n\n        // 初始化菜单\n        this._initMenus();\n\n        // 添加 图片上传\n        this._initUploadImg();\n\n        // 初始化选区，将光标定位到内容尾部\n        this.initSelection(true);\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 解绑所有事件（暂时不对外开放）\n    _offAllEvent: function _offAllEvent() {\n        $.offAll();\n    }\n};\n\n// 检验是否浏览器环境\ntry {\n    document;\n} catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n}\n\n// polyfill\npolyfill();\n\n// 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\nvar inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}@font-face {  font-family: \\'w-e-icon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'w-e-icon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-icon-font:before {  content: \"\\\\ea5c\";}.w-e-icon-text-heigh:before {  content: \"\\\\ea5f\";}.w-e-toolbar {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* flex-wrap: wrap; */  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}';\n\n// 将 css 代码添加到 <style> 中\nvar style = document.createElement('style');\nstyle.type = 'text/css';\nstyle.innerHTML = inlinecss;\ndocument.getElementsByTagName('HEAD').item(0).appendChild(style);\n\n// 返回\nvar index = window.wangEditor || Editor;\n\nreturn index;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_wangeditor@3.1.1@wangeditor/release/wangEditor.js\n// module id = Eq4a\n// module chunks = 2 4","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.6.11@core-js/library/modules/_object-to-array.js\n// module id = KkUl\n// module chunks = 4 6","module.exports = { \"default\": require(\"core-js/library/fn/object/entries\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_babel-runtime@6.26.0@babel-runtime/core-js/object/entries.js\n// module id = Q+Ik\n// module chunks = 4 6","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.6.11@core-js/library/modules/es7.object.entries.js\n// module id = YwuI\n// module chunks = 4 6"],"sourceRoot":""}